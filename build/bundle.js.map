{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/DayCard.svelte","../../src/components/ActivityItem.svelte","../../src/components/DayDetail.svelte","../../src/components/SwipeNavigation.svelte","../../src/components/SwipeTutorial.svelte","../../src/components/ScrollSpy.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<!-- src/components/DayCard.svelte -->\n<script>\n  export let day;\n  export let isActive = false;\n  export let onClick;\n</script>\n\n<div class=\"itinerary-card {isActive ? 'active' : ''}\" on:click={onClick}>\n  <div class=\"card-header\" style=\"background-image: url({day.image && day.image.src})\">\n    <div class=\"header-content\">\n      <h3>Day {day.dayNumber}</h3>\n      <div class=\"card-date\">{day.date}</div>\n    </div>\n  </div>\n  <div class=\"card-content\">\n    <div class=\"card-highlight\">{day.emoji} {day.title}</div>\n    <div class=\"card-route\">\n      <strong>Route:</strong> {day.route.from} → {day.route.to} \n      {#if day.driving && day.driving.total && day.driving.total.time}\n        <span class=\"driving-time\">({day.driving.total.time})</span>\n      {/if}\n    </div>\n    <p class=\"card-summary\">{day.shortSummary || day.summary}</p>\n    \n    {#if day.highlights && day.highlights.length > 0}\n      <div class=\"card-highlights\">\n        <h4>Key Highlights:</h4>\n        <ul>\n          {#each day.highlights.slice(0, 3) as highlight}\n            <li>{highlight}</li>\n          {/each}\n        </ul>\n      </div>\n    {/if}\n    \n    {#if day.accommodation && day.accommodation.name}\n      <div class=\"card-accommodation\">\n        <div class=\"accommodation-icon\">🏠</div>\n        <div class=\"accommodation-details\">\n          <span class=\"accommodation-label\">Stay at:</span>\n          <span class=\"accommodation-name\">{day.accommodation.name}</span>\n        </div>\n      </div>\n    {/if}\n    \n    <button class=\"card-details\" on:click|stopPropagation={onClick}>View Details</button>\n  </div>\n</div>\n\n<style>\n  .itinerary-card {\n    background-color: white;\n    border-radius: 12px;\n    overflow: hidden;\n    box-shadow: 0 10px 20px rgba(0,0,0,0.05), 0 6px 6px rgba(0,0,0,0.1);\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n\n  .itinerary-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 30px rgba(0,0,0,0.1), 0 10px 10px rgba(0,0,0,0.05);\n  }\n  \n  .itinerary-card.active {\n    border: 2px solid var(--primary);\n    transform: translateY(-5px);\n    box-shadow: 0 15px 30px rgba(0,0,0,0.1), 0 10px 10px rgba(0,0,0,0.05);\n  }\n\n  .card-header {\n    position: relative;\n    height: 120px;\n    background-color: var(--primary);\n    color: white;\n    background-size: cover;\n    background-position: center;\n    overflow: hidden;\n  }\n\n  .card-header::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to bottom, rgba(0,0,0,0.3), rgba(0,0,0,0.7));\n  }\n\n  .header-content {\n    position: relative;\n    z-index: 2;\n    padding: 15px 20px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n  }\n\n  .card-header h3 {\n    margin: 0;\n    font-size: 1.2em;\n    text-shadow: 1px 1px 3px rgba(0,0,0,0.5);\n  }\n\n  .card-date {\n    font-size: 0.85em;\n    opacity: 0.9;\n    font-weight: 400;\n    text-shadow: 1px 1px 2px rgba(0,0,0,0.5);\n  }\n\n  .card-content {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n\n  .card-highlight {\n    font-weight: 600;\n    color: var(--primary-dark);\n    margin-bottom: 10px;\n  }\n\n  .card-route {\n    font-size: 0.9em;\n    color: var(--gray);\n    margin-bottom: 15px;\n  }\n\n  .card-route strong {\n    color: var(--secondary);\n  }\n  \n  .driving-time {\n    font-style: italic;\n    color: var(--primary-dark);\n  }\n  \n  .card-summary {\n    margin-bottom: 15px;\n    flex-grow: 1;\n    font-size: 0.95em;\n  }\n  \n  .card-highlights {\n    background-color: var(--gray-light);\n    border-radius: 8px;\n    padding: 12px 15px;\n    margin-bottom: 15px;\n  }\n  \n  .card-highlights h4 {\n    font-size: 0.95em;\n    margin: 0 0 8px 0;\n    color: var(--primary-dark);\n  }\n  \n  .card-highlights ul {\n    margin: 0;\n    padding-left: 20px;\n  }\n  \n  .card-highlights li {\n    font-size: 0.9em;\n    margin-bottom: 5px;\n  }\n  \n  .card-highlights li:last-child {\n    margin-bottom: 0;\n  }\n\n  .card-accommodation {\n    display: flex;\n    align-items: center;\n    background-color: var(--light-blue);\n    border-radius: 8px;\n    padding: 12px 15px;\n    margin-bottom: 15px;\n  }\n  \n  .accommodation-icon {\n    font-size: 1.5em;\n    margin-right: 10px;\n    color: var(--primary);\n  }\n  \n  .accommodation-details {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .accommodation-label {\n    font-size: 0.8em;\n    color: var(--gray);\n  }\n  \n  .accommodation-name {\n    font-weight: 600;\n    color: var(--primary-dark);\n  }\n\n  .card-details {\n    display: inline-block;\n    background-color: var(--primary);\n    color: white;\n    text-decoration: none;\n    padding: 8px 15px;\n    border-radius: 50px;\n    font-size: 0.9em;\n    transition: background-color 0.2s ease;\n    margin-top: 10px;\n    border: none;\n    cursor: pointer;\n    align-self: flex-start;\n  }\n\n  .card-details:hover {\n    background-color: var(--primary-dark);\n  }\n</style>","<!-- src/components/ActivityItem.svelte -->\n<script>\n  export let item;\n  \n  // Handle backward compatibility by providing defaults\n  const typeEmoji = item.typeEmoji || '';\n  const isFeatured = item.isFeatured || false;\n  const isGem = item.isGem || false;\n  const isUserSelected = item.isUserSelected || false;\n  const details = item.details || [];\n  const quickStops = item.quickStops || [];\n  const cost = item.cost !== undefined ? item.cost : null;\n  \n  // Get the first link if available\n  const link = item.links && item.links.length > 0 ? item.links[0].url : \n               item.link ? item.link : null;\n</script>\n\n<div class=\"activity-item\">\n  <span class=\"activity-time\">{item.time}</span>\n  <div class=\"activity-content {isFeatured ? 'featured' : ''} {isGem ? 'gem' : ''} {isUserSelected ? 'user-selected' : ''}\">\n    <!-- Badges row -->\n    {#if isFeatured || isGem || isUserSelected}\n      <div class=\"badge-container\">\n        {#if isFeatured}<span class=\"badge featured-badge\">⭐ Featured</span>{/if}\n        {#if isGem}<span class=\"badge gem-badge\">💎 Hidden Gem</span>{/if}\n        {#if isUserSelected}<span class=\"badge selected-badge\">✓ Selected</span>{/if}\n      </div>\n    {/if}\n    \n    <!-- Title with type emoji -->\n    <div class=\"activity-title\">\n      {#if typeEmoji}<span class=\"type-emoji\">{typeEmoji}</span>{/if}\n      {#if link}\n        <a href={link} target=\"_blank\" rel=\"noopener\">{item.title}</a>\n      {:else}\n        {item.title}\n      {/if}\n    </div>\n    \n    <!-- Description -->\n    {#if item.description}\n      <div class=\"activity-desc\">{item.description}</div>\n    {/if}\n    \n    <!-- Details -->\n    {#if details.length > 0}\n      <ul class=\"details-list\">\n        {#each details as detail}\n          <li>{detail}</li>\n        {/each}\n      </ul>\n    {/if}\n    \n    <!-- Cost -->\n    {#if cost !== null}\n      <div class=\"activity-cost\">\n        <span class=\"cost-label\">Cost:</span> \n        <span class=\"cost-value\">{cost || \"Free\"}</span>\n      </div>\n    {/if}\n  </div>\n</div>\n\n<!-- Quick stops that follow this activity -->\n{#if quickStops.length > 0}\n  <div class=\"quick-stops-container\">\n    <div class=\"quick-stops-header\">Quick Stops</div>\n    <ul class=\"quick-stops-list\">\n      {#each quickStops as stop}\n        <li>{stop}</li>\n      {/each}\n    </ul>\n  </div>\n{/if}\n\n<style>\n  .activity-item {\n    position: relative;\n    padding-bottom: 25px;\n  }\n  \n  .activity-time {\n    position: absolute;\n    left: -30px;\n    top: 0;\n    background-color: var(--primary);\n    color: white;\n    font-size: 0.8em;\n    padding: 2px 8px;\n    border-radius: 50px;\n    transform: translateX(-50%);\n    white-space: nowrap;\n  }\n  \n  .activity-content {\n    background-color: var(--light);\n    padding: 15px;\n    border-radius: 8px;\n    box-shadow: 0 3px 10px rgba(0,0,0,0.05);\n    border-left: 3px solid transparent;\n  }\n  \n  .activity-content.featured {\n    border-left: 3px solid var(--warning);\n    background-color: var(--light-yellow);\n  }\n  \n  .activity-content.gem {\n    border-left: 3px solid var(--primary);\n    background-color: var(--light-blue);\n  }\n  \n  .activity-content.user-selected {\n    border-left: 3px solid var(--success);\n    background-color: #e8f5e9;\n  }\n  \n  /* Combined styling for multiple flags */\n  .activity-content.featured.gem,\n  .activity-content.featured.user-selected,\n  .activity-content.gem.user-selected,\n  .activity-content.featured.gem.user-selected {\n    border-left: 3px solid var(--accent);\n    background: linear-gradient(to right, var(--light-yellow), var(--light-blue), #e8f5e9);\n    background-size: 600% 100%;\n    animation: gradient-shift 8s ease infinite;\n  }\n  \n  @keyframes gradient-shift {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n  }\n  \n  .badge-container {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 5px;\n    margin-bottom: 8px;\n  }\n  \n  .badge {\n    font-size: 0.75em;\n    padding: 2px 6px;\n    border-radius: 4px;\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n  }\n  \n  .featured-badge {\n    background-color: var(--warning);\n    color: #856404;\n  }\n  \n  .gem-badge {\n    background-color: var(--primary);\n    color: white;\n  }\n  \n  .selected-badge {\n    background-color: var(--success);\n    color: white;\n  }\n  \n  .activity-title {\n    font-weight: 600;\n    margin-bottom: 5px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n  \n  .activity-title a {\n    color: var(--primary);\n    text-decoration: none;\n    transition: color 0.2s ease;\n  }\n  \n  .activity-title a:hover {\n    color: var(--primary-dark);\n    text-decoration: underline;\n  }\n  \n  .type-emoji {\n    font-size: 1.2em;\n  }\n  \n  .activity-desc {\n    font-size: 0.95em;\n    margin-bottom: 8px;\n  }\n  \n  .details-list {\n    margin: 8px 0;\n    padding-left: 20px;\n  }\n  \n  .details-list li {\n    margin-bottom: 4px;\n  }\n  \n  .activity-cost {\n    margin: 8px 0;\n    font-size: 0.9em;\n  }\n  \n  .cost-label {\n    font-weight: 600;\n  }\n  \n  .cost-value {\n    color: var(--primary-dark);\n  }\n  \n  .quick-stops-container {\n    margin: -15px 0 20px 30px;\n    padding: 10px 15px;\n    background-color: #f5f5f5;\n    border-left: 2px dashed var(--gray);\n    border-radius: 0 0 8px 8px;\n  }\n  \n  .quick-stops-header {\n    font-size: 0.8em;\n    font-weight: 600;\n    color: var(--gray);\n    margin-bottom: 5px;\n  }\n  \n  .quick-stops-list {\n    list-style-type: none;\n    padding-left: 5px;\n    margin: 0;\n  }\n  \n  .quick-stops-list li {\n    font-size: 0.85em;\n    padding: 3px 0;\n    color: var(--secondary);\n    position: relative;\n    padding-left: 20px;\n  }\n  \n  .quick-stops-list li::before {\n    content: '↪';\n    position: absolute;\n    left: 0;\n    color: var(--primary);\n  }\n</style>","<!-- src/components/DayDetail.svelte -->\n<script>\n  import ActivityItem from './ActivityItem.svelte';\n  export let day;\n</script>\n\n<section id={day.id} class=\"day-section\">\n  <div class=\"container\">\n    <div class=\"day-header\">\n      <h2 class=\"day-title\">{day.emoji} Day {day.dayNumber}: {day.title}</h2>\n      <div class=\"day-date\">{day.date}</div>\n    </div>\n    \n    <img src={day.image.src} alt={day.image.alt} class=\"day-image\">\n    \n    <div class=\"quote-box\">\n      \"{day.quote.text}\" - {day.quote.author}\n    </div>\n    \n    <div class=\"daily-summary\">\n      <div class=\"summary-title\">Day Summary</div>\n      <p>{day.summary}</p>\n      \n      <div class=\"drive-info\">\n        <strong>Total Driving:</strong> ~{day.driving.total.distance.km} km ({day.driving.total.distance.miles} miles), {day.driving.total.time}\n        <ul>\n          {#each day.driving.segments as segment}\n            <li>{segment.from} to {segment.to}: ~{segment.distance.km} km ({segment.distance.miles} miles), {segment.time}</li>\n          {/each}\n        </ul>\n      </div>\n    </div>\n    \n    <div class=\"map-container\">\n      {@html day.mapUrl}\n    </div>\n    \n    <div class=\"day-schedule\">\n      <h3 class=\"section-heading\">Daily Schedule</h3>\n      <div class=\"activity-timeline\">\n        {#each day.schedule as item}\n          <ActivityItem {item} />\n        {/each}\n      </div>\n    </div>\n    \n    <!-- Highlights Section -->\n    <div class=\"highlights-section\">\n      <h4>Key Highlights of the Day</h4>\n      <ul class=\"highlights-list\">\n        {#each day.highlights as highlight, i}\n          <li>\n            {#if typeof highlight === 'string'}\n              {highlight}\n            {:else}\n              {#if highlight.link}\n                <a href={highlight.link} target=\"_blank\" rel=\"noopener\"><strong>{highlight.title}:</strong></a> {highlight.description}\n              {:else}\n                <strong>{highlight.title}:</strong> {highlight.description}\n              {/if}\n            {/if}\n          </li>\n        {/each}\n      </ul>\n    </div>\n    \n    <!-- Accommodations Section -->\n    <div class=\"accommodations-section\">\n      <h4>Accommodations</h4>\n      <div class=\"accommodations-details\">\n        <strong>{day.accommodation.name}</strong>\n        <br>\n        {day.accommodation.address}\n        <br>\n        Cost: {day.accommodation.cost}\n        <br>\n        {day.accommodation.roomType}\n        {#if day.accommodation.notes}\n          <br>\n          Note: {day.accommodation.notes}\n        {/if}\n      </div>\n    </div>\n    \n    <!-- Alternatives Section -->\n    <div class=\"alternatives-section\">\n      <h4>Alternative Activities</h4>\n      <ul class=\"alternatives-list\">\n        {#each day.alternatives as alt}\n          <li>\n            {#if alt.link}\n              <a href={alt.link} target=\"_blank\" rel=\"noopener\"><strong>{alt.title}:</strong></a> {alt.description}\n            {:else}\n              <strong>{alt.title}:</strong> {alt.description}\n            {/if}\n            {#if alt.isGem}<span class=\"badge gem-badge\">💎 Hidden Gem</span>{/if}\n            {#if alt.isUserSelected}<span class=\"badge selected-badge\">✓ Selected</span>{/if}\n          </li>\n        {/each}\n      </ul>\n    </div>\n    \n    <!-- Bad Weather Alternatives -->\n    <div class=\"weather-section\">\n      <h4>Bad Weather Alternatives</h4>\n      <ul class=\"weather-list\">\n        {#each day.badWeatherAlternatives as alt}\n          <li>\n            {#if alt.link}\n              <a href={alt.link} target=\"_blank\" rel=\"noopener\"><strong>{alt.title}:</strong></a> {alt.description}\n            {:else}\n              <strong>{alt.title}:</strong> {alt.description}\n            {/if}\n          </li>\n        {/each}\n      </ul>\n    </div>\n    \n    <!-- Hot Springs Section -->\n    {#if day.hotSprings && day.hotSprings.length > 0}\n      <div class=\"hotsprings-section\">\n        <h4><span class=\"hotspring-icon\">♨️</span> Hot Springs</h4>\n        <ul class=\"hotsprings-list\">\n          {#each day.hotSprings as spring}\n            <li class={spring.isEveningRelaxation ? 'evening-relaxation' : ''}>\n              {#if spring.link}\n                <a href={spring.link} target=\"_blank\" rel=\"noopener\"><strong>{spring.name}:</strong></a> {spring.description}\n              {:else}\n                <strong>{spring.name}:</strong> {spring.description}\n              {/if}\n              <div class=\"hotspring-details\">\n                <span class=\"hotspring-location\"><strong>Location:</strong> {spring.location}</span>\n                <span class=\"hotspring-cost\"><strong>Cost:</strong> {spring.cost}</span>\n                {#if spring.isEveningRelaxation}\n                  <span class=\"evening-badge\">✨ Evening Relaxation</span>\n                {/if}\n              </div>\n            </li>\n          {/each}\n        </ul>\n      </div>\n    {/if}\n    \n    <!-- Tips & Notes -->\n    {#if day.tip}\n      <div class=\"tip-box\">{day.tip}</div>\n    {/if}\n    \n    {#if day.notes}\n      <div class=\"notes-container\">\n        <h4>Notes</h4>\n        {#if typeof day.notes === 'string'}\n          <p>{day.notes}</p>\n        {:else if Array.isArray(day.notes) && day.notes.length > 0}\n          <ul class=\"notes-list\">\n            {#each day.notes as note}\n              <li>{note}</li>\n            {/each}\n          </ul>\n        {/if}\n      </div>\n    {/if}\n  </div>\n</section>\n\n<style>\n  .section-heading {\n    font-size: 1.4em;\n    color: var(--primary-dark);\n    margin-bottom: 20px;\n    position: relative;\n    padding-left: 20px;\n  }\n\n  .section-heading:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 10px;\n    height: 10px;\n    background-color: var(--primary);\n    border-radius: 50%;\n  }\n  \n  .activity-timeline {\n    position: relative;\n    padding-left: 30px;\n  }\n\n  .activity-timeline:before {\n    content: '';\n    position: absolute;\n    left: 5px;\n    top: 0;\n    height: 100%;\n    width: 2px;\n    background-color: var(--gray-light);\n  }\n  \n  .badge {\n    font-size: 0.75em;\n    padding: 2px 6px;\n    border-radius: 4px;\n    margin-left: 8px;\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n  }\n  \n  .gem-badge {\n    background-color: var(--primary);\n    color: white;\n  }\n  \n  .selected-badge {\n    background-color: var(--success);\n    color: white;\n  }\n  \n  .notes-container {\n    padding: 20px;\n    background-color: #f8f9fa;\n    border-radius: 12px;\n    margin: 25px 0;\n    border-left: 3px solid var(--primary);\n  }\n  \n  .notes-container h4 {\n    margin-top: 0;\n    margin-bottom: 15px;\n    color: var(--primary-dark);\n  }\n  \n  .notes-list {\n    margin-top: 10px;\n    margin-left: 20px;\n    list-style-type: disc;\n  }\n  \n  .notes-list li {\n    margin-bottom: 8px;\n  }\n  \n  /* Hot Springs Section Styles */\n  .hotsprings-section {\n    padding: 25px;\n    background-color: #e9f7fb;\n    border-radius: 12px;\n    margin: 25px 0;\n    border-left: 4px solid #17a2b8;\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .hotsprings-section:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 120px;\n    height: 120px;\n    background: radial-gradient(circle, rgba(23, 162, 184, 0.15) 20%, rgba(23, 162, 184, 0) 70%);\n    border-radius: 50%;\n    z-index: 0;\n  }\n  \n  .hotsprings-section h4 {\n    display: flex;\n    align-items: center;\n    font-size: 1.3em;\n    margin-bottom: 15px;\n    color: #17a2b8;\n  }\n  \n  .hotspring-icon {\n    font-size: 1.2em;\n    margin-right: 10px;\n  }\n  \n  .hotsprings-list {\n    list-style: none;\n    padding: 0;\n  }\n  \n  .hotsprings-list li {\n    position: relative;\n    padding: 15px;\n    margin-bottom: 15px;\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\n    transition: transform 0.2s ease, box-shadow 0.2s ease;\n  }\n  \n  .hotsprings-list li:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  .hotsprings-list li.evening-relaxation {\n    background: linear-gradient(to right, white, #f8f4ff);\n    border-left: 3px solid #9c27b0;\n  }\n  \n  .hotspring-details {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    margin-top: 8px;\n    font-size: 0.9em;\n    color: #666;\n  }\n  \n  .evening-badge {\n    display: inline-block;\n    background-color: #9c27b0;\n    color: white;\n    padding: 3px 8px;\n    border-radius: 12px;\n    font-size: 0.75em;\n    margin-left: auto;\n  }\n  \n  a {\n    color: var(--primary);\n    text-decoration: none;\n    transition: color 0.2s ease;\n  }\n  \n  a:hover {\n    color: var(--primary-dark);\n    text-decoration: underline;\n  }\n</style>","<!-- src/components/SwipeNavigation.svelte -->\n<script>\n  import { onMount, onDestroy } from 'svelte';\n  \n  // Props\n  export let currentIndex = 0;\n  export let totalItems = 0;\n  export let onNavigate = (newIndex) => {};\n  export let threshold = 100; // Minimum distance to trigger a swipe\n  export let disabled = false;\n  \n  // State\n  let touchStartX = 0;\n  let touchEndX = 0;\n  let isSwiping = false;\n  let swipeOffset = 0;\n  let element;\n  \n  // Handle touch start\n  function handleTouchStart(e) {\n    if (disabled) return;\n    \n    touchStartX = e.touches[0].clientX;\n    isSwiping = true;\n    swipeOffset = 0;\n  }\n  \n  // Handle touch move\n  function handleTouchMove(e) {\n    if (!isSwiping || disabled) return;\n    \n    touchEndX = e.touches[0].clientX;\n    swipeOffset = touchEndX - touchStartX;\n    \n    // Prevent scrolling while swiping horizontally\n    if (Math.abs(swipeOffset) > 10) {\n      e.preventDefault();\n    }\n  }\n  \n  // Handle touch end\n  function handleTouchEnd() {\n    if (!isSwiping || disabled) return;\n    \n    const swipeDistance = touchEndX - touchStartX;\n    \n    if (swipeDistance > threshold && currentIndex > 0) {\n      // Swiped right - go to previous\n      onNavigate(currentIndex - 1);\n    } else if (swipeDistance < -threshold && currentIndex < totalItems - 1) {\n      // Swiped left - go to next\n      onNavigate(currentIndex + 1);\n    }\n    \n    isSwiping = false;\n    swipeOffset = 0;\n  }\n  \n  // Set up and clean up event listeners\n  onMount(() => {\n    if (element) {\n      element.addEventListener('touchstart', handleTouchStart, { passive: false });\n      element.addEventListener('touchmove', handleTouchMove, { passive: false });\n      element.addEventListener('touchend', handleTouchEnd, { passive: false });\n    }\n  });\n  \n  onDestroy(() => {\n    if (element) {\n      element.removeEventListener('touchstart', handleTouchStart);\n      element.removeEventListener('touchmove', handleTouchMove);\n      element.removeEventListener('touchend', handleTouchEnd);\n    }\n  });\n</script>\n\n<div class=\"swipe-container\" bind:this={element}>\n  <slot></slot>\n  \n  {#if isSwiping && Math.abs(swipeOffset) > 20}\n    <div class=\"swipe-indicator {swipeOffset > 0 ? 'prev' : 'next'}\" \n         style=\"opacity: {Math.min(Math.abs(swipeOffset) / threshold, 0.9)}\">\n      <div class=\"indicator-content\">\n        <span class=\"arrow\">{swipeOffset > 0 ? '←' : '→'}</span>\n        <span class=\"text\">{swipeOffset > 0 ? 'Previous Day' : 'Next Day'}</span>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .swipe-container {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    touch-action: pan-y; /* Allow vertical scrolling */\n  }\n  \n  .swipe-indicator {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 80px;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    z-index: 900;\n  }\n  \n  .swipe-indicator.prev {\n    left: 0;\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n  \n  .swipe-indicator.next {\n    right: 0;\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n  }\n  \n  .indicator-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n  }\n  \n  .arrow {\n    font-size: 2rem;\n    margin-bottom: 4px;\n  }\n  \n  .text {\n    font-size: 0.8rem;\n    font-weight: 600;\n  }\n</style>","<!-- src/components/SwipeTutorial.svelte -->\n<script>\n    import { onMount } from 'svelte';\n    \n    export let showOnce = true; // Show tutorial only once\n    export let delay = 1000; // Delay before showing the tutorial (ms)\n    \n    let visible = false;\n    \n    // Check if the user has seen the tutorial before\n    function hasSeenTutorial() {\n      return localStorage.getItem('swipeTutorialSeen') === 'true';\n    }\n    \n    function setTutorialSeen() {\n      localStorage.setItem('swipeTutorialSeen', 'true');\n    }\n    \n    function dismiss() {\n      visible = false;\n      if (showOnce) {\n        setTutorialSeen();\n      }\n    }\n    \n    // Only show on mobile/touch devices\n    function isTouchDevice() {\n      return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    \n    onMount(() => {\n      // Only show if this is a touch device and (if showOnce is true) user hasn't seen it before\n      if (isTouchDevice() && (!showOnce || !hasSeenTutorial())) {\n        setTimeout(() => {\n          visible = true;\n        }, delay);\n      }\n    });\n  </script>\n  \n  {#if visible}\n    <div class=\"tutorial-overlay\" on:click={dismiss}>\n      <div class=\"tutorial-modal\" on:click|stopPropagation>\n        <div class=\"tutorial-content\">\n          <h3>Swipe to Navigate</h3>\n          <div class=\"gesture-demo\">\n            <div class=\"hand-icon\">👆</div>\n            <div class=\"swipe-animation\"></div>\n          </div>\n          <p>Swipe left or right to navigate between days of your trip</p>\n          <button class=\"tutorial-button\" on:click={dismiss}>Got it!</button>\n        </div>\n      </div>\n    </div>\n  {/if}\n  \n  <style>\n    .tutorial-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(0, 0, 0, 0.7);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n    \n    .tutorial-modal {\n      background-color: white;\n      border-radius: 12px;\n      width: 90%;\n      max-width: 350px;\n      padding: 25px;\n      box-shadow: 0 5px 30px rgba(0, 0, 0, 0.3);\n      text-align: center;\n    }\n    \n    .tutorial-content h3 {\n      margin-top: 0;\n      color: var(--primary-dark);\n      font-size: 1.4em;\n      margin-bottom: 20px;\n    }\n    \n    .gesture-demo {\n      margin: 30px 0;\n      position: relative;\n      height: 80px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    \n    .hand-icon {\n      font-size: 2.5em;\n      animation: handMove 2s infinite;\n    }\n    \n    .swipe-animation {\n      position: absolute;\n      top: 50%;\n      width: 60%;\n      height: 2px;\n      background: linear-gradient(to right, transparent, var(--primary), transparent);\n      z-index: -1;\n    }\n    \n    .tutorial-button {\n      background-color: var(--primary);\n      color: white;\n      border: none;\n      padding: 12px 25px;\n      border-radius: 50px;\n      font-size: 1em;\n      margin-top: 20px;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n    \n    .tutorial-button:hover {\n      background-color: var(--primary-dark);\n    }\n    \n    @keyframes handMove {\n      0%, 100% {\n        transform: translateX(-30px);\n      }\n      50% {\n        transform: translateX(30px);\n      }\n    }\n  </style>","<!-- src/components/ScrollSpy.svelte -->\n<script>\n    import { onMount, onDestroy, createEventDispatcher } from 'svelte';\n    \n    // Required props\n    export let sectionIds = []; // Array of section IDs to monitor\n    export let offset = 100; // Offset from top of viewport (in pixels)\n    \n    const dispatch = createEventDispatcher();\n    let currentSection = null;\n    let overviewVisible = false;\n    let ticking = false;\n    \n    function handleScroll() {\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          updateCurrentSection();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    }\n    \n    function updateCurrentSection() {\n      // First check if overview is visible\n      const overview = document.querySelector('.overview-section');\n      if (overview) {\n        const rect = overview.getBoundingClientRect();\n        // Overview is considered visible if it's near the top of the viewport\n        overviewVisible = rect.top > -100 && rect.top < window.innerHeight / 2;\n      }\n      \n      // If overview is prominently visible, we're not in a day section\n      if (overviewVisible) {\n        if (currentSection !== null) {\n          currentSection = null;\n          dispatch('change', { section: null, inOverview: true });\n        }\n        return;\n      }\n      \n      // Find which section is currently visible\n      let found = false;\n      \n      // Simple approach: the first section that's near the top of the viewport is active\n      for (const id of sectionIds) {\n        const section = document.getElementById(id);\n        if (!section) continue;\n        \n        const rect = section.getBoundingClientRect();\n        \n        // If this section is near the top of the viewport, consider it active\n        if (rect.top <= offset && rect.bottom > offset) {\n          found = true;\n          if (currentSection !== id) {\n            currentSection = id;\n            dispatch('change', { section: id, inOverview: false });\n          }\n          break;\n        }\n      }\n      \n      // Fallback: if no section is exactly at the offset but we're not in overview,\n      // find the section that's most visible in the viewport\n      if (!found && !overviewVisible && currentSection === null) {\n        const viewportHeight = window.innerHeight;\n        let maxVisibleSection = null;\n        let maxVisibleArea = 0;\n        \n        for (const id of sectionIds) {\n          const section = document.getElementById(id);\n          if (!section) continue;\n          \n          const rect = section.getBoundingClientRect();\n          if (rect.bottom < 0 || rect.top > viewportHeight) continue; // Not visible\n          \n          // Calculate visible area\n          const visibleTop = Math.max(0, rect.top);\n          const visibleBottom = Math.min(viewportHeight, rect.bottom);\n          const visibleArea = visibleBottom - visibleTop;\n          \n          if (visibleArea > maxVisibleArea) {\n            maxVisibleArea = visibleArea;\n            maxVisibleSection = id;\n          }\n        }\n        \n        if (maxVisibleSection) {\n          currentSection = maxVisibleSection;\n          dispatch('change', { section: maxVisibleSection, inOverview: false });\n        }\n      }\n    }\n    \n    onMount(() => {\n      // Add scroll event listener\n      window.addEventListener('scroll', handleScroll, { passive: true });\n      \n      // Initial check\n      setTimeout(updateCurrentSection, 100);\n      \n      // Check again after content is fully loaded\n      window.addEventListener('load', updateCurrentSection);\n      \n      // Create helper for debugging\n      window.debugScrollSpy = () => {\n        updateCurrentSection();\n        console.log('Current section:', currentSection);\n        console.log('Overview visible:', overviewVisible);\n        \n        // Show positions of all sections\n        for (const id of sectionIds) {\n          const section = document.getElementById(id);\n          if (section) {\n            const rect = section.getBoundingClientRect();\n            console.log(`${id}: top=${rect.top.toFixed(0)}, bottom=${rect.bottom.toFixed(0)}`);\n          }\n        }\n      };\n    });\n    \n    onDestroy(() => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('load', updateCurrentSection);\n      if (window.debugScrollSpy) delete window.debugScrollSpy;\n    });\n  </script>\n  \n  <!-- No visible content, this is a utility component -->\n  <slot></slot>","<!-- src/App.svelte -->\n<script>\n  import { onMount } from 'svelte';\n  import DayCard from './components/DayCard.svelte';\n  import DayDetail from './components/DayDetail.svelte';\n  import SwipeNavigation from './components/SwipeNavigation.svelte';\n  import SwipeTutorial from './components/SwipeTutorial.svelte';\n  import ScrollSpy from './components/ScrollSpy.svelte'; // Import ScrollSpy\n  \n  let tripData = {};\n  let daysData = [];\n  let currentDay = null;\n  let currentDayIndex = 0;\n  let isLoading = true;\n  let loadError = null;\n  let mobileNavVisible = false;\n  let daySectionIds = []; // To store all day section IDs\n\n  onMount(async () => {\n    console.log(\"App component mounted\");\n    try {\n      // Load trip overview data\n      console.log(\"Fetching trip overview data...\");\n      const tripResponse = await fetch('data/trip-overview.json');\n      if (!tripResponse.ok) {\n        throw new Error(`Failed to load trip overview data: ${tripResponse.status}`);\n      }\n      tripData = await tripResponse.json();\n      console.log(\"Trip overview data loaded successfully\");\n      \n      // Load all day data files with error handling\n      const dayPromises = [];\n      for (let i = 1; i <= tripData.totalDays; i++) {\n        console.log(`Fetching day ${i} data...`);\n        dayPromises.push(\n          fetch(`data/day${i}.json`)\n            .then(async res => {\n              if (!res.ok) {\n                console.warn(`Day ${i} data not found (${res.status}). This day will be skipped.`);\n                return null; // Return null for days that aren't found\n              }\n              try {\n                const dayData = await res.json();\n                console.log(`Day ${i} data loaded successfully`);\n                return dayData;\n              } catch (parseError) {\n                console.error(`Error parsing day ${i} JSON:`, parseError);\n                return null;\n              }\n            })\n            .catch(err => {\n              console.error(`Error loading day ${i} data:`, err);\n              return null; // Return null for errors\n            })\n        );\n      }\n      \n      // Filter out null values (days that weren't found or failed to load)\n      const daysResults = await Promise.all(dayPromises);\n      daysData = daysResults.filter(day => day !== null);\n      console.log(`Successfully loaded ${daysData.length} days of data`);\n      \n      if (daysData.length === 0) {\n        throw new Error('No day data could be loaded');\n      }\n      \n      // Create array of day section IDs for ScrollSpy\n      daySectionIds = daysData.map(day => day.id);\n      \n      isLoading = false;\n    } catch (error) {\n      console.error('Error loading data:', error);\n      loadError = error.message || 'Failed to load trip data';\n      isLoading = false;\n    }\n  });\n\n  function scrollToDay(dayId) {\n    const element = document.getElementById(dayId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n    \n    // Find the index of the day and update current day state\n    const dayIndex = daysData.findIndex(day => day.id === dayId);\n    if (dayIndex !== -1) {\n      currentDayIndex = dayIndex;\n    }\n    \n    currentDay = dayId;\n    hideMobileNav();\n  }\n  \n  // Navigate between days based on index\n  function navigateToDay(newIndex) {\n    if (newIndex >= 0 && newIndex < daysData.length) {\n      const dayId = daysData[newIndex].id;\n      scrollToDay(dayId);\n    }\n  }\n  \n  // Handle ScrollSpy section change event\n  function handleSectionChange(event) {\n    const { section, inOverview } = event.detail;\n    \n    if (!inOverview && section) {\n      // Update current day and index based on section ID\n      currentDay = section;\n      const dayIndex = daysData.findIndex(day => day.id === section);\n      if (dayIndex !== -1) {\n        currentDayIndex = dayIndex;\n      }\n    }\n  }\n  \n  // Toggle mobile navigation menu\n  function toggleMobileNav() {\n    mobileNavVisible = !mobileNavVisible;\n  }\n  \n  // Hide mobile navigation menu\n  function hideMobileNav() {\n    mobileNavVisible = false;\n  }\n</script>\n\n<div class=\"app\">\n  {#if isLoading}\n    <div class=\"loading\">Loading trip data...</div>\n  {:else if loadError}\n    <div class=\"error-container\">\n      <h2>Error Loading Data</h2>\n      <p>{loadError}</p>\n      <p>Please check that all data files are available and refresh the page.</p>\n    </div>\n  {:else}\n    <!-- ScrollSpy component to track visible sections -->\n    <ScrollSpy sectionIds={daySectionIds} offset={150} on:change={handleSectionChange} />\n    \n    <!-- Mobile Swipe Tutorial -->\n    <SwipeTutorial showOnce={true} delay={2000} />\n    \n    <!-- Mobile Day Navigation Button -->\n    <button class=\"mobile-nav-toggle\" on:click={toggleMobileNav}>\n      <span class=\"mobile-nav-icon\">☰</span> \n      Day {daysData[currentDayIndex].dayNumber}\n    </button>\n    \n    <!-- Mobile Day Navigation Menu -->\n    {#if mobileNavVisible}\n      <div class=\"mobile-nav-overlay\" on:click={hideMobileNav}>\n        <div class=\"mobile-nav-container\" on:click|stopPropagation>\n          <div class=\"mobile-nav-header\">\n            <h3>Select Day</h3>\n            <button class=\"mobile-nav-close\" on:click={hideMobileNav}>×</button>\n          </div>\n          <div class=\"mobile-nav-days\">\n            {#each daysData as day, index}\n              <button \n                class=\"mobile-nav-day {currentDay === day.id ? 'active' : ''}\"\n                on:click={() => scrollToDay(day.id)}\n              >\n                <span class=\"day-emoji\">{day.emoji}</span>\n                <span class=\"day-label\">Day {day.dayNumber}: {day.title}</span>\n              </button>\n            {/each}\n          </div>\n        </div>\n      </div>\n    {/if}\n    \n    <!-- Header -->\n    <header>\n      <div class=\"container\">\n        <h1>{tripData.title}</h1>\n        <div class=\"subtitle\">{tripData.dateRange}</div>\n      </div>\n    </header>\n    \n    <!-- Trip Overview -->\n    <section class=\"overview-section\">\n      <div class=\"container\">\n        <h2 class=\"section-title\">Trip Overview</h2>\n        \n        <div class=\"daily-summary\">\n          <div class=\"summary-title\">Adventure Details</div>\n          <ul class=\"drive-info\">\n            <li><strong>Duration:</strong> {tripData.duration} ({tripData.dateRange})</li>\n            <li><strong>Travelers:</strong> {tripData.travelers}</li>\n            <li><strong>Vehicle:</strong> {tripData.vehicle}</li>\n            <li><strong>Route:</strong> {tripData.route}</li>\n            <li><strong>Total Distance:</strong> {tripData.totalDistance.km} km ({tripData.totalDistance.miles} miles)</li>\n          </ul>\n        </div>\n        \n        <!-- Day Cards for Navigation -->\n        <div class=\"itinerary-grid\">\n          {#each daysData as day}\n            <DayCard \n              {day} \n              isActive={currentDay === day.id} \n              onClick={() => scrollToDay(day.id)} \n            />\n          {/each}\n        </div>\n      </div>\n    </section>\n    \n    <!-- Map Section -->\n    <section class=\"map-section\">\n      <div class=\"container\">\n        <h2 class=\"section-title\">Trip Overview Map</h2>\n        <div class=\"map-container\">\n          <iframe src=\"{tripData.mapUrl}\" width=\"100%\" height=\"450\" style=\"border:0; border-radius: 10px;\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n        </div>\n      </div>\n    </section>\n    \n    <!-- Day Details Sections with Swipe Navigation -->\n    <SwipeNavigation\n      currentIndex={currentDayIndex}\n      totalItems={daysData.length}\n      onNavigate={navigateToDay}\n    >\n      {#each daysData as day}\n        <DayDetail {day} />\n      {/each}\n    </SwipeNavigation>\n    \n    <!-- Resources Section -->\n    <section class=\"resources-section\">\n      <div class=\"container\">\n        <h2 class=\"section-title\">Essential Resources</h2>\n        \n        <div class=\"resources-grid\">\n          {#each tripData.resources as resource}\n            <div class=\"resource-card\">\n              <h3>{resource.title}</h3>\n              <ul>\n                {#each resource.items as item}\n                  <li>\n                    {#if item.url}\n                      <a href={item.url} target=\"_blank\">{item.name}</a>\n                    {:else}\n                      <strong>{item.name}:</strong> {item.description}\n                    {/if}\n                    \n                    {#if item.note}\n                      <span class=\"note\">{item.note}</span>\n                    {/if}\n                    \n                    {#if item.subitems && item.subitems.length > 0}\n                      <ul>\n                        {#each item.subitems as subitem}\n                          <li>\n                            {#if subitem.url}\n                              <a href={subitem.url} target=\"_blank\">{subitem.name}</a>\n                            {:else}\n                              {subitem.name}{#if subitem.description}: {subitem.description}{/if}\n                            {/if}\n                          </li>\n                        {/each}\n                      </ul>\n                    {/if}\n                  </li>\n                {/each}\n              </ul>\n            </div>\n          {/each}\n        </div>\n      </div>\n    </section>\n    \n    <footer>\n      <div class=\"container\">\n        <p>{tripData.title} | {tripData.dateRange}</p>\n        <p>Safe travels and unforgettable adventures!</p>\n      </div>\n    </footer>\n  {/if}\n</div>\n\n<style>\n  .loading {\n    text-align: center;\n    padding: 50px;\n    font-size: 1.5em;\n    color: var(--secondary);\n  }\n  \n  .error-container {\n    max-width: 800px;\n    margin: 100px auto;\n    padding: 30px;\n    background-color: #ffebee;\n    border-left: 5px solid #f44336;\n    color: #b71c1c;\n    border-radius: 4px;\n    text-align: center;\n  }\n  \n  /* Mobile navigation styles */\n  .mobile-nav-toggle {\n    display: none;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    background-color: var(--primary);\n    color: white;\n    border: none;\n    border-radius: 50px;\n    padding: 12px 20px;\n    font-size: 1rem;\n    font-weight: 600;\n    box-shadow: 0 3px 10px rgba(0,0,0,0.2);\n    z-index: 800;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .mobile-nav-icon {\n    margin-right: 8px;\n  }\n  \n  .mobile-nav-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0,0,0,0.7);\n    z-index: 900;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .mobile-nav-container {\n    width: 90%;\n    max-width: 350px;\n    max-height: 80vh;\n    background-color: white;\n    border-radius: 12px;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .mobile-nav-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px 20px;\n    background-color: var(--primary);\n    color: white;\n  }\n  \n  .mobile-nav-header h3 {\n    margin: 0;\n    font-size: 1.2rem;\n  }\n  \n  .mobile-nav-close {\n    background: none;\n    border: none;\n    color: white;\n    font-size: 1.8rem;\n    line-height: 1;\n    cursor: pointer;\n    padding: 0;\n  }\n  \n  .mobile-nav-days {\n    overflow-y: auto;\n    padding: 10px;\n  }\n  \n  .mobile-nav-day {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    background: none;\n    border: none;\n    padding: 12px 15px;\n    text-align: left;\n    border-radius: 8px;\n    margin-bottom: 5px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n  }\n  \n  .mobile-nav-day:hover {\n    background-color: var(--gray-light);\n  }\n  \n  .mobile-nav-day.active {\n    background-color: var(--light-blue);\n    color: var(--primary-dark);\n    font-weight: 600;\n  }\n  \n  .day-emoji {\n    font-size: 1.5rem;\n    margin-right: 10px;\n    flex-shrink: 0;\n  }\n  \n  .day-label {\n    font-size: 0.95rem;\n  }\n  \n  /* Media queries */\n  @media (max-width: 768px) {\n    .mobile-nav-toggle {\n      display: flex;\n    }\n  }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","style","removeProperty","setProperty","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","defaultPrevented","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","keys","t1_value","driving","total","time","span","t1","each_value","highlights","div","h4","ul","li","t","t_value","accommodation","div2","div0","div1","span0","span1","t4","t4_value","dayNumber","t3_value","date","t5_value","emoji","t7_value","title","route","to","t16_value","shortSummary","summary","if_block0","create_if_block_2","create_if_block_1","if_block2","create_if_block","image","div6","h3","div5","div3","div4","strong","button","apply","arguments","t3","t5","t7","t11","t11_value","t13","t13_value","t16","day","isActive","onClick","create_if_block_9","create_if_block_8","create_if_block_7","description","t0_value","create_if_block_6","create_if_block_5","create_if_block_4","if_block3","create_if_block_3","if_block5","textContent","t0","if_block1","if_block4","if_block6","item","typeEmoji","isFeatured","isGem","isUserSelected","details","quickStops","cost","link","links","t2_value","distance","km","miles","t8_value","t2","t6","t6_value","t8","a_href_value","create_if_block_12","create_if_block_13","notes","br","create_if_block_10","each_value_1","hotSprings","location","isEveningRelaxation","li_class_value","strong0","strong1","tip","show_if","isArray","quote","author","t20_value","t22_value","t24_value","raw_value","mapUrl","address","roomType","segments","each_value_5","schedule","each_value_4","create_if_block_11","each_value_3","alternatives","each_value_2","badWeatherAlternatives","img","img_src_value","alt","section","section_id_value","id","div14","h2","ul0","div8","div7","div9","h40","ul1","div11","h41","div10","br0","br1","br2","div12","h42","ul2","div13","h43","ul3","current","t10","t10_value","t12","t12_value","t20","t22","t24","innerHTML","each_blocks_3","t36","t36_value","t39","t39_value","t42","t42_value","t45","t45_value","div1_class_value","min","abs","currentIndex","totalItems","onNavigate","newIndex","threshold","disabled","touchStartX","touchEndX","isSwiping","swipeOffset","handleTouchStart","touches","clientX","$$invalidate","handleTouchMove","preventDefault","handleTouchEnd","swipeDistance","passive","$$value","showOnce","delay","visible","window","navigator","maxTouchPoints","localStorage","getItem","setTimeout","setItem","sectionIds","offset","dispatch","currentSection","overviewVisible","ticking","handleScroll","requestAnimationFrame","updateCurrentSection","overview","querySelector","rect","getBoundingClientRect","top","innerHeight","inOverview","found","getElementById","bottom","viewportHeight","maxVisibleSection","maxVisibleArea","visibleTop","visibleArea","debugScrollSpy","console","log","toFixed","t9_value","dateRange","t17_value","duration","t19_value","travelers","t28_value","vehicle","t32_value","totalDistance","t49_value","t51_value","swipetutorial","SwipeTutorial","resources","iframe","iframe_src_value","header","h1","section0","h20","li0","li1","li2","strong2","li3","strong3","li4","strong4","section1","h21","section2","h22","footer","p0","p1","t9","t17","t19","t28","t32","t38","t38_value","each_blocks_1","swipenavigation_changes","t49","t51","each_blocks","note","subitems","if_block","items","tripData","daysData","currentDay","currentDayIndex","isLoading","loadError","mobileNavVisible","daySectionIds","scrollToDay","dayId","scrollIntoView","behavior","dayIndex","findIndex","hideMobileNav","async","tripResponse","fetch","ok","status","json","dayPromises","totalDays","res","warn","dayData","parseError","error","catch","err","daysResults","all","message","body"],"mappings":"gCAAA,SAASA,IAAU,CAkBnB,SAASC,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CACA,IAAIE,EA4jCAC,EA3jCJ,SAASC,EAAcC,EAAaC,GAKhC,OAJKJ,IACDA,EAAuBK,SAASC,cAAc,MAElDN,EAAqBO,KAAOH,EACrBD,IAAgBH,EAAqBO,IAChD,CA2BA,SAASC,EAAYC,EAAYC,EAAKC,EAASvB,GAC3C,GAAIqB,EAAY,CACZ,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAASvB,GAC5D,OAAOqB,EAAW,GAAGG,EACxB,CACL,CACA,SAASC,EAAiBJ,EAAYC,EAAKC,EAASvB,GAChD,OAAOqB,EAAW,IAAMrB,EAxE5B,SAAgB0B,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,CACX,CAoEUG,CAAON,EAAQD,IAAIQ,QAAST,EAAW,GAAGrB,EAAGsB,KAC7CC,EAAQD,GAClB,CACA,SAASS,EAAiBV,EAAYE,EAASS,EAAOhC,GAClD,GAAIqB,EAAW,IAAMrB,EAAI,CACrB,MAAMiC,EAAOZ,EAAW,GAAGrB,EAAGgC,IAC9B,QAAsBE,IAAlBX,EAAQS,MACR,OAAOC,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIf,EAAQS,MAAMO,OAAQN,EAAKM,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC1BL,EAAOK,GAAKjB,EAAQS,MAAMQ,GAAKP,EAAKO,GAExC,OAAOL,CACV,CACD,OAAOZ,EAAQS,MAAQC,CAC1B,CACD,OAAOV,EAAQS,KACnB,CACA,SAASS,EAAiBC,EAAMC,EAAiBrB,EAAKC,EAASqB,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAerB,EAAiBkB,EAAiBrB,EAAKC,EAASsB,GACrEH,EAAKK,EAAED,EAAcF,EACxB,CACL,CAKA,SAASI,EAAyBzB,GAC9B,GAAIA,EAAQD,IAAIiB,OAAS,GAAI,CACzB,MAAMP,EAAQ,GACRO,EAAShB,EAAQD,IAAIiB,OAAS,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxBR,EAAMQ,IAAM,EAEhB,OAAOR,CACV,CACD,OAAQ,CACZ,CAgCA,SAASiB,EAAcC,GACnB,OAAgB,MAATA,EAAgB,GAAKA,CAChC,CA0MA,SAASC,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,EACvB,CAoDA,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,KACxC,CASA,SAASE,EAAOL,GACRA,EAAKM,YACLN,EAAKM,WAAWC,YAAYP,EAEpC,CACA,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIvB,EAAI,EAAGA,EAAIsB,EAAWvB,OAAQC,GAAK,EACpCsB,EAAWtB,IACXsB,EAAWtB,GAAGwB,EAAED,EAE5B,CACA,SAASE,EAAQC,GACb,OAAOjD,SAASC,cAAcgD,EAClC,CAmBA,SAASC,EAAKC,GACV,OAAOnD,SAASoD,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CACA,SAASI,IACL,OAAOJ,EAAK,GAChB,CAIA,SAASK,EAAOnB,EAAMoB,EAAOC,EAASC,GAElC,OADAtB,EAAKuB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMtB,EAAKwB,oBAAoBJ,EAAOC,EAASC,EAC1D,CAQA,SAASG,EAAiB9E,GACtB,OAAO,SAAUyE,GAGb,OAFAA,EAAMM,kBAEC/E,EAAGgF,KAAKC,KAAMR,EAC7B,CACA,CAsBA,SAASS,EAAK7B,EAAM8B,EAAWjC,GACd,MAATA,EACAG,EAAK+B,gBAAgBD,GAChB9B,EAAKgC,aAAaF,KAAejC,GACtCG,EAAKiC,aAAaH,EAAWjC,EACrC,CAsPA,SAASqC,EAASpB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IAElBD,EAAKC,KAAOA,EAChB,CA0BA,SAASoB,EAAUnC,EAAMoC,EAAKvC,EAAOwC,GACpB,MAATxC,EACAG,EAAKsC,MAAMC,eAAeH,GAG1BpC,EAAKsC,MAAME,YAAYJ,EAAKvC,EAAOwC,EAAY,YAAc,GAErE,CAyUA,SAASI,EAAsBC,GAC3BlF,EAAoBkF,CACxB,CACA,SAASC,IACL,IAAKnF,EACD,MAAM,IAAIoF,MAAM,oDACpB,OAAOpF,CACX,CAoBA,SAASqF,EAAQlG,GACbgG,IAAwBG,GAAGC,SAASC,KAAKrG,EAC7C,CAiBA,SAASsG,EAAUtG,GACfgG,IAAwBG,GAAGI,WAAWF,KAAKrG,EAC/C,CAaA,SAASwG,IACL,MAAMT,EAAYC,IAClB,MAAO,CAACS,EAAMC,GAAUC,cAAa,GAAU,MAC3C,MAAMC,EAAYb,EAAUI,GAAGS,UAAUH,GACzC,GAAIG,EAAW,CAGX,MAAMnC,EArTlB,SAAsBgC,EAAMC,GAAQG,QAAEA,GAAU,EAAKF,WAAEA,GAAa,GAAU,IAC1E,MAAMG,EAAI7F,SAAS8F,YAAY,eAE/B,OADAD,EAAEE,gBAAgBP,EAAMI,EAASF,EAAYD,GACtCI,CACX,CAiT0BG,CAAaR,EAAMC,EAAQ,CAAEC,eAI3C,OAHAC,EAAU9E,QAAQxB,SAAQN,IACtBA,EAAGgF,KAAKe,EAAWtB,EAAM,KAErBA,EAAMyC,gBACjB,CACD,OAAO,CAAI,CAEnB,CA6CA,SAASC,EAAOpB,EAAWtB,GACvB,MAAMmC,EAAYb,EAAUI,GAAGS,UAAUnC,EAAMgC,MAC3CG,GAEAA,EAAU9E,QAAQxB,SAAQN,GAAMA,EAAGgF,KAAKC,KAAMR,IAEtD,CAEA,MAAM2C,EAAmB,GAEnBC,EAAoB,GAC1B,IAAIC,EAAmB,GACvB,MAAMC,EAAkB,GAClBC,EAAmCC,QAAQC,UACjD,IAAIC,GAAmB,EAWvB,SAASC,EAAoB5H,GACzBsH,EAAiBjB,KAAKrG,EAC1B,CAsBA,MAAM6H,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IAIL,GAAiB,IAAbD,EACA,OAEJ,MAAME,EAAkBpH,EACxB,EAAG,CAGC,IACI,KAAOkH,EAAWX,EAAiB7E,QAAQ,CACvC,MAAMwD,EAAYqB,EAAiBW,GACnCA,IACAjC,EAAsBC,GACtBmC,EAAOnC,EAAUI,GACpB,CACJ,CACD,MAAOW,GAIH,MAFAM,EAAiB7E,OAAS,EAC1BwF,EAAW,EACLjB,CACT,CAID,IAHAhB,EAAsB,MACtBsB,EAAiB7E,OAAS,EAC1BwF,EAAW,EACJV,EAAkB9E,QACrB8E,EAAkBc,KAAlBd,GAIJ,IAAK,IAAI7E,EAAI,EAAGA,EAAI8E,EAAiB/E,OAAQC,GAAK,EAAG,CACjD,MAAM4F,EAAWd,EAAiB9E,GAC7BqF,EAAeQ,IAAID,KAEpBP,EAAeS,IAAIF,GACnBA,IAEP,CACDd,EAAiB/E,OAAS,CAClC,OAAa6E,EAAiB7E,QAC1B,KAAOgF,EAAgBhF,QACnBgF,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBE,EAAeU,QACfzC,EAAsBmC,EAC1B,CACA,SAASC,EAAO/B,GACZ,GAAoB,OAAhBA,EAAGqC,SAAmB,CACtBrC,EAAG+B,SACH9H,EAAQ+F,EAAGsC,eACX,MAAMzG,EAAQmE,EAAGnE,MACjBmE,EAAGnE,MAAQ,EAAE,GACbmE,EAAGqC,UAAYrC,EAAGqC,SAASzF,EAAEoD,EAAG7E,IAAKU,GACrCmE,EAAGuC,aAAapI,QAAQsH,EAC3B,CACL,CAyBA,MAAMe,EAAW,IAAIb,IACrB,IAAIc,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHhG,EAAG6F,EAEX,CACA,SAASI,IACAJ,EAAOE,GACR1I,EAAQwI,EAAOG,GAEnBH,EAASA,EAAO7F,CACpB,CACA,SAASkG,EAAcC,EAAOC,GACtBD,GAASA,EAAM1G,IACfmG,EAASS,OAAOF,GAChBA,EAAM1G,EAAE2G,GAEhB,CACA,SAASE,EAAeH,EAAOC,EAAOzF,EAAQ0E,GAC1C,GAAIc,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAASN,IAAIa,GACb,OACJP,EAASL,IAAIY,GACbN,EAAOG,EAAE1C,MAAK,KACVsC,EAASS,OAAOF,GACZd,IACI1E,GACAwF,EAAMlF,EAAE,GACZoE,IACH,IAELc,EAAMI,EAAEH,EACX,MACQf,GACLA,GAER,CAmqBA,SAASmB,EAAiBL,GACtBA,GAASA,EAAMH,GACnB,CAIA,SAASS,EAAgBzD,EAAW3C,EAAQI,EAAQiG,GAChD,MAAMjB,SAAEA,EAAQE,aAAEA,GAAiB3C,EAAUI,GAC7CqC,GAAYA,EAASkB,EAAEtG,EAAQI,GAC1BiG,GAED7B,GAAoB,KAChB,MAAM+B,EAAiB5D,EAAUI,GAAGC,SAASwD,IAAI7J,GAAK8J,OAAOtJ,GAIzDwF,EAAUI,GAAGI,WACbR,EAAUI,GAAGI,WAAWF,QAAQsD,GAKhCvJ,EAAQuJ,GAEZ5D,EAAUI,GAAGC,SAAW,EAAE,IAGlCsC,EAAapI,QAAQsH,EACzB,CACA,SAASkC,EAAkB/D,EAAWhC,GAClC,MAAMoC,EAAKJ,EAAUI,GACD,OAAhBA,EAAGqC,YA9vBX,SAAgCnI,GAC5B,MAAM0J,EAAW,GACXC,EAAU,GAChB1C,EAAiBhH,SAASyI,IAA0B,IAApB1I,EAAI4J,QAAQlB,GAAYgB,EAAS1D,KAAK0C,GAAKiB,EAAQ3D,KAAK0C,KACxFiB,EAAQ1J,SAASyI,GAAMA,MACvBzB,EAAmByC,CACvB,CAyvBQG,CAAuB/D,EAAGuC,cAC1BtI,EAAQ+F,EAAGI,YACXJ,EAAGqC,UAAYrC,EAAGqC,SAASxE,EAAED,GAG7BoC,EAAGI,WAAaJ,EAAGqC,SAAW,KAC9BrC,EAAG7E,IAAM,GAEjB,CACA,SAAS6I,GAAWpE,EAAWvD,IACI,IAA3BuD,EAAUI,GAAGnE,MAAM,KACnBoF,EAAiBf,KAAKN,GA52BrB4B,IACDA,GAAmB,EACnBH,EAAiB4C,KAAKpC,IA42BtBjC,EAAUI,GAAGnE,MAAMqI,KAAK,IAE5BtE,EAAUI,GAAGnE,MAAOQ,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CACA,SAAS8H,GAAKvE,EAAWpB,EAAS4F,EAAUC,EAAiBC,EAAWC,EAAOC,EAAe3I,EAAQ,EAAE,IACpG,MAAM4I,EAAmB/J,EACzBiF,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtBqC,SAAU,KACVlH,IAAK,GAELoJ,QACAxC,OAAQpI,EACR2K,YACAI,MAAO5K,IAEPmG,SAAU,GACVG,WAAY,GACZuE,cAAe,GACfrC,cAAe,GACfC,aAAc,GACdqC,QAAS,IAAIC,IAAIrG,EAAQoG,UAAYH,EAAmBA,EAAiBzE,GAAG4E,QAAU,KAEtFnE,UAAW3G,IACX+B,QACAiJ,YAAY,EACZC,KAAMvG,EAAQvB,QAAUwH,EAAiBzE,GAAG+E,MAEhDP,GAAiBA,EAAcxE,EAAG+E,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAhF,EAAG7E,IAAMiJ,EACHA,EAASxE,EAAWpB,EAAQ+F,OAAS,CAAE,GAAE,CAAClI,EAAG4I,KAAQC,KACnD,MAAMnI,EAAQmI,EAAK9I,OAAS8I,EAAK,GAAKD,EAOtC,OANIjF,EAAG7E,KAAOmJ,EAAUtE,EAAG7E,IAAIkB,GAAI2D,EAAG7E,IAAIkB,GAAKU,MACtCiD,EAAG8E,YAAc9E,EAAG0E,MAAMrI,IAC3B2D,EAAG0E,MAAMrI,GAAGU,GACZiI,GACAhB,GAAWpE,EAAWvD,IAEvB4I,CAAG,IAEZ,GACNjF,EAAG+B,SACHiD,GAAQ,EACR/K,EAAQ+F,EAAGsC,eAEXtC,EAAGqC,WAAWgC,GAAkBA,EAAgBrE,EAAG7E,KAC/CqD,EAAQvB,OAAQ,CAChB,GAAIuB,EAAQ2G,QAAS,CAEjB,MAAMC,EAvhDlB,SAAkBtH,GACd,OAAOuH,MAAMC,KAAKxH,EAAQyH,WAC9B,CAqhD0BC,CAAShH,EAAQvB,QAE/B+C,EAAGqC,UAAYrC,EAAGqC,SAASoD,EAAEL,GAC7BA,EAAMjL,QAAQoD,EACjB,MAGGyC,EAAGqC,UAAYrC,EAAGqC,SAASO,IAE3BpE,EAAQkH,OACR5C,EAAclD,EAAUI,GAAGqC,UAC/BgB,EAAgBzD,EAAWpB,EAAQvB,OAAQuB,EAAQnB,OAAQmB,EAAQ8E,eAEnEzB,GACH,CACDlC,EAAsB8E,EAC1B,CAoDA,MAAMkB,GACF,QAAAC,GACIjC,EAAkB7E,KAAM,GACxBA,KAAK8G,SAAWjM,CACnB,CACD,GAAAkM,CAAIvF,EAAM2B,GACN,IAAK7H,EAAY6H,GACb,OAAOtI,EAEX,MAAM8G,EAAa3B,KAAKkB,GAAGS,UAAUH,KAAUxB,KAAKkB,GAAGS,UAAUH,GAAQ,IAEzE,OADAG,EAAUP,KAAK+B,GACR,KACH,MAAM6D,EAAQrF,EAAUqD,QAAQ7B,IACjB,IAAX6D,GACArF,EAAUsF,OAAOD,EAAO,EAAE,CAErC,CACD,IAAAE,CAAKC,GAhrET,IAAkBC,EAirENpH,KAAKqH,QAjrECD,EAirEkBD,EAhrEG,IAA5BlM,OAAOqM,KAAKF,GAAK9J,UAirEhB0C,KAAKkB,GAAG8E,YAAa,EACrBhG,KAAKqH,MAAMF,GACXnH,KAAKkB,GAAG8E,YAAa,EAE5B,qFC/sEgCuB,EAAAlL,EAAI,GAAAmL,QAAQC,MAAMC,KAAI,8BAAxB,gBAAyB,uDAApDpJ,EAA4DH,EAAAwJ,EAAApJ,gCAA/B,EAAAxB,GAAAwK,KAAAA,EAAAlL,EAAI,GAAAmL,QAAQC,MAAMC,KAAI,KAAApH,EAAAsH,EAAAL,8CAS1CM,EAAAxL,KAAIyL,WAAWjL,MAAM,EAAG,wBAA7BS,OAAIC,GAAA,yPAHVe,EAOMH,EAAA4J,EAAAxJ,GANJL,EAAwB6J,EAAAC,UACxB9J,EAIK6J,EAAAE,8EAHIJ,EAAAxL,KAAIyL,WAAWjL,MAAM,EAAG,WAA7BS,OAAIC,GAAA,EAAA,mHAAJD,wDACKjB,EAAS,GAAA,oEAAdiC,EAAoBH,EAAA+J,EAAA3J,8BAAflC,EAAS,GAAA,KAAAiE,EAAA6H,EAAAC,wDAWkB/L,EAAG,GAACgM,cAAcpJ,KAAI,kYAJ5DX,EAMMH,EAAAmK,EAAA/J,GALJL,EAAwCoK,EAAAC,UACxCrK,EAGMoK,EAAAE,GAFJtK,EAAiDsK,EAAAC,UACjDvK,EAAgEsK,EAAAE,8BAA9BrM,EAAG,GAACgM,cAAcpJ,KAAI,KAAAqB,EAAAqI,EAAAC,wGA9BnDrB,EAAAlL,KAAIwM,UAAS,GACEC,EAAAzM,KAAI0M,KAAI,GAILC,EAAA3M,KAAI4M,MAAK,GAAGC,EAAA7M,KAAI8M,MAAK,KAEvB9M,EAAG,GAAC+M,MAAM5C,KAAI,KAAKnK,EAAG,GAAC+M,MAAMC,GAAE,GAKjCC,IAAAjN,EAAI,GAAAkN,cAAgBlN,KAAImN,SAAO,GAJjDC,GAAApN,EAAI,GAAAmL,SAAWnL,KAAImL,QAAQC,OAASpL,EAAI,GAAAmL,QAAQC,MAAMC,MAAIgC,GAAArN,MAM5DA,EAAG,GAACyL,YAAczL,KAAIyL,WAAWxK,OAAS,GAACqM,GAAAtN,GAW3CuN,GAAAvN,KAAIgM,eAAiBhM,EAAI,GAAAgM,cAAcpJ,MAAI4K,GAAAxN,6DAzB1C,8JAOoC,kSATWkE,EAAA+H,EAAA,mBAAA,QAAAjM,KAAIyN,OAASzN,EAAI,GAAAyN,MAAMpN,KAAG,qRADvDL,EAAQ,GAAG,SAAW,IAAE,0BAApDiC,EAwCMH,EAAA4L,EAAAxL,GAvCJL,EAKM6L,EAAAzB,GAJJpK,EAGMoK,EAAAE,GAFJtK,EAA4BsK,EAAAwB,wBAC5B9L,EAAuCsK,EAAAD,iBAG3CrK,EAgCM6L,EAAAE,GA/BJ/L,EAAyD+L,EAAAC,+BACzDhM,EAKM+L,EAAAE,GAJJjM,EAAuBiM,EAAAC,8DAKzBlM,EAA6D+L,EAAAnM,iEAuB7DI,EAAqF+L,EAAAI,oCAA9B/O,EAAAe,OAAAA,EAAO,GAAAiO,MAAAtK,KAAAuK,uCAtCDjP,EAAAe,OAAAA,EAAO,GAAAiO,MAAAtK,KAAAuK,mCAGzD,EAAAxN,GAAAwK,KAAAA,EAAAlL,KAAIwM,UAAS,KAAAvI,EAAAsH,EAAAL,GACE,EAAAxK,GAAA+L,KAAAA,EAAAzM,KAAI0M,KAAI,KAAAzI,EAAAkK,EAAA1B,QAHmBvI,EAAA+H,EAAA,mBAAA,QAAAjM,KAAIyN,OAASzN,EAAI,GAAAyN,MAAMpN,KAAG,KAOlD,EAAAK,GAAAiM,KAAAA,EAAA3M,KAAI4M,MAAK,KAAA3I,EAAAmK,EAAAzB,GAAG,EAAAjM,GAAAmM,KAAAA,EAAA7M,KAAI8M,MAAK,KAAA7I,EAAAoK,EAAAxB,eAEvB7M,EAAG,GAAC+M,MAAM5C,KAAI,KAAAlG,EAAAqK,EAAAC,eAAKvO,EAAG,GAAC+M,MAAMC,GAAE,KAAA/I,EAAAuK,EAAAC,GACnDzO,EAAI,GAAAmL,SAAWnL,KAAImL,QAAQC,OAASpL,EAAI,GAAAmL,QAAQC,MAAMC,uEAIpC,EAAA3K,GAAAuM,MAAAA,IAAAjN,EAAI,GAAAkN,cAAgBlN,KAAImN,SAAO,KAAAlJ,EAAAyK,EAAAzB,IAEnDjN,EAAG,GAACyL,YAAczL,KAAIyL,WAAWxK,OAAS,iEAW1CjB,KAAIgM,eAAiBhM,EAAI,GAAAgM,cAAcpJ,mGA5BpB5C,EAAQ,GAAG,SAAW,IAAE,gIALvC2O,GAAG7D,GACH8D,SAAAA,GAAW,GAAK9D,WAChB+D,GAAO/D,gWCoBP9K,EAAU,kIAACiC,EAAoDH,EAAAwJ,EAAApJ,mBAArD4M,KACV9O,EAAK,gIAACiC,EAAkDH,EAAAwJ,EAAApJ,mBAAnD6M,KACL/O,EAAc,kIAACiC,EAAoDH,EAAAwJ,EAAApJ,mBAArD8M,sHAHrB/M,EAIMH,EAAA4J,EAAAxJ,4HASH,MAAA6J,EAAA/L,KAAK8M,MAAK,8CAAV,EAAApM,GAAAqL,KAAAA,EAAA/L,KAAK8M,MAAK,KAAA7I,EAAA6H,EAAAC,0CAFoCA,EAAA/L,KAAK8M,MAAK,yCAAhD9M,EAAI,uFAAbiC,EAA8DH,EAAA1C,EAAA8C,kBAAf,EAAAxB,GAAAqL,KAAAA,EAAA/L,KAAK8M,MAAK,KAAA7I,EAAA6H,EAAAC,0CAQ/BA,EAAA/L,KAAKiP,YAAW,oFAA5ChN,EAAmDH,EAAA4J,EAAAxJ,kBAAvB,EAAAxB,GAAAqL,KAAAA,EAAA/L,KAAKiP,YAAW,KAAAhL,EAAA6H,EAAAC,4CAOnC/L,EAAM,IAAA,qEAAXiC,EAAiBH,EAAA+J,EAAA3J,uDAqBdlC,EAAI,GAAA,qEAATiC,EAAeH,EAAA+J,EAAA3J,2EAnDQgN,EAAAlP,KAAKqL,KAAI,MAG/BrL,EAAU,IAAIA,EAAK,IAAIA,EAAc,KAAAmP,GAAAnP,KAUnCA,EAAS,8DAA2BA,EAAS,sDAAnCiC,EAA2CH,EAAAwJ,EAAApJ,uBAA5CkN,CAAApP,4BACTA,EAAI,GAAAqP,iBAQNC,EAAAtP,KAAKiP,aAAWM,GAAAvP,KAKhBA,EAAO,GAACiB,OAAS,uBAEXjB,EAAO,wBAAZiB,OAAIC,GAAA,kIADRe,EAIKH,EAAA8J,EAAA1J,iFAHIlC,EAAO,WAAZiB,OAAIC,GAAA,EAAA,mHAAJD,+BAFiBoM,CAAArN,GASlBwP,EAAS,OAATxP,wGAGyBqM,EAAAoD,YAAA,GAAAzP,MAAQ,+IAFpCiC,EAGMH,EAAA4J,EAAAxJ,GAFJL,EAAqC6J,EAAAU,UACrCvK,EAAgD6J,EAAAW,uBAHlCiB,CAAAtN,KAUjBA,EAAU,GAACiB,OAAS,6BAIZjB,EAAU,wBAAfiB,OAAIC,GAAA,mSAHVe,EAOMH,EAAAqK,EAAAjK,GANJL,EAAiDsK,EAAAD,UACjDrK,EAIKsK,EAAAP,iFAHI5L,EAAU,WAAfiB,OAAIC,GAAA,EAAA,mHAAJD,+BAJkBuM,CAAAxN,uQA7CM4D,EAAAuI,EAAA,QAAA,qBAAAnM,EAAa,GAAA,WAAa,SAAKA,EAAK,GAAG,MAAQ,IAAK,KAAAA,EAAiB,GAAA,gBAAkB,IAAE,uEAFzHiC,EA4CMH,EAAAmK,EAAA/J,GA3CJL,EAA8CoK,EAAAX,iBAC9CzJ,EAyCMoK,EAAAE,yBA9BJtK,EAOMsK,EAAAD,+IAnBqB,EAAAxL,GAAAwO,KAAAA,EAAAlP,KAAKqL,KAAI,KAAApH,EAAAyL,EAAAR,IAG/BlP,EAAU,IAAIA,EAAK,IAAIA,EAAc,KAAAoN,EAAA3L,EAAAzB,EAAAU,GAUnCV,EAAS,IAAA2P,EAAAlO,EAAAzB,EAAAU,YASXV,KAAKiP,mEAKLjP,EAAO,GAACiB,OAAS,GAAC2O,EAAAnO,EAAAzB,EAAAU,GAST,OAATV,MAAawP,EAAA/N,EAAAzB,EAAAU,GAUjBV,EAAU,GAACiB,OAAS,GAAC4O,EAAApO,EAAAzB,EAAAU,oIA/DboP,GAAIhF,EAGT,MAAAiF,EAAYD,EAAKC,WAAa,GAC9BC,EAAaF,EAAKE,aAAc,EAChCC,EAAQH,EAAKG,QAAS,EACtBC,EAAiBJ,EAAKI,iBAAkB,EACxCC,EAAUL,EAAKK,SAAO,GACtBC,EAAaN,EAAKM,YAAU,GAC5BC,OAAqBzP,IAAdkP,EAAKO,KAAqBP,EAAKO,KAAO,KAG7CC,EAAOR,EAAKS,OAAST,EAAKS,MAAMtP,OAAS,EAAI6O,EAAKS,MAAM,GAAG7Q,IACpDoQ,EAAKQ,KAAOR,EAAKQ,KAAO,ykBCYtBpB,EAAAlP,MAAQmK,KAAI,GAAMqG,EAAAxQ,MAAQgN,GAAE,KAAKhN,EAAO,IAACyQ,SAASC,GAAE,KAAO1Q,EAAO,IAACyQ,SAASE,MAAK,GAAWC,EAAA5Q,MAAQqL,KAAI,mCAA3F,mBAAgB,kBAAwB,oBAA6B,4BAAvFpJ,EAAmHH,EAAA+J,EAAA3J,0EAA9G,EAAAxB,GAAAwO,KAAAA,EAAAlP,MAAQmK,KAAI,KAAAlG,EAAAyL,EAAAR,GAAM,EAAAxO,GAAA8P,KAAAA,EAAAxQ,MAAQgN,GAAE,KAAA/I,EAAA4M,EAAAL,eAAKxQ,EAAO,IAACyQ,SAASC,GAAE,KAAAzM,EAAAqI,EAAAC,eAAOvM,EAAO,IAACyQ,SAASE,MAAK,KAAA1M,EAAA6M,EAAAC,GAAW,EAAArQ,GAAAkQ,KAAAA,EAAA5Q,MAAQqL,KAAI,KAAApH,EAAA+M,EAAAJ,0RA+BhG1B,EAAAlP,MAAU8M,MAAK,GAAaL,EAAAzM,MAAUiP,YAAW,uCAAjC,0BAAzBhN,EAAmCH,EAAAiM,EAAA7L,2CAA1B,EAAAxB,GAAAwO,KAAAA,EAAAlP,MAAU8M,MAAK,KAAA7I,EAAAyL,EAAAR,GAAa,EAAAxO,GAAA+L,KAAAA,EAAAzM,MAAUiP,YAAW,KAAAhL,EAAAkK,EAAA1B,oEAFOyC,EAAAlP,MAAU8M,MAAK,GAAiBL,EAAAzM,MAAUiP,YAAW,gDAArC,kBAAxErL,EAAAxE,EAAA,OAAA6R,EAAAjR,MAAUsQ,wFAAnBrO,EAA+FH,EAAA1C,EAAA8C,GAAvCL,EAAmCzC,EAAA2O,2CAA1B,EAAArN,GAAAwO,KAAAA,EAAAlP,MAAU8M,MAAK,KAAA7I,EAAAyL,EAAAR,GAAvE,EAAAxO,GAAAuQ,KAAAA,EAAAjR,MAAUsQ,qBAA8E,EAAA5P,GAAA+L,KAAAA,EAAAzM,MAAUiP,YAAW,KAAAhL,EAAAkK,EAAA1B,0DAHvHzM,EAAS,IAAA,0DAATA,EAAS,IAAA,KAAAiE,EAAA6H,EAAAC,0DADA,MAAc,iBAAd/L,MAAsBkR,GAG3BlR,MAAUsQ,KAAIa,iEAJvBlP,EAUKH,EAAA+J,EAAA3J,4IAkBElC,EAAG,GAACgM,cAAcoF,MAAK,4BAD1B,qCAAJnP,EAAIH,EAAAuP,EAAAnP,yCACGlC,EAAG,GAACgM,cAAcoF,MAAK,KAAAnN,EAAAsH,EAAAL,gEAcjBgE,EAAAlP,KAAI8M,MAAK,GAAaL,EAAAzM,KAAIiP,YAAW,uCAA3B,0BAAnBhN,EAA6BH,EAAAiM,EAAA7L,2CAApB,EAAAxB,GAAAwO,KAAAA,EAAAlP,KAAI8M,MAAK,KAAA7I,EAAAyL,EAAAR,GAAa,EAAAxO,GAAA+L,KAAAA,EAAAzM,KAAIiP,YAAW,KAAAhL,EAAAkK,EAAA1B,oEAFayC,EAAAlP,KAAI8M,MAAK,GAAiBL,EAAAzM,KAAIiP,YAAW,gDAA/B,kBAA5DrL,EAAAxE,EAAA,OAAA6R,EAAAjR,KAAIsQ,wFAAbrO,EAAmFH,EAAA1C,EAAA8C,GAAjCL,EAA6BzC,EAAA2O,2CAApB,EAAArN,GAAAwO,KAAAA,EAAAlP,KAAI8M,MAAK,KAAA7I,EAAAyL,EAAAR,GAA3D,EAAAxO,GAAAuQ,KAAAA,EAAAjR,KAAIsQ,qBAAwE,EAAA5P,GAAA+L,KAAAA,EAAAzM,KAAIiP,YAAW,KAAAhL,EAAAkK,EAAA1B,kKAIvFxK,EAAkDH,EAAAwJ,EAAApJ,oJACzCD,EAAoDH,EAAAwJ,EAAApJ,8DANvE,OAAAlC,KAAIsQ,KAAIgB,wBAKR3B,EAAA3P,KAAIiQ,OAAKnB,KACTvB,EAAAvN,KAAIkQ,gBAAcnB,4EAPzB9M,EAQKH,EAAA+J,EAAA3J,uIAFElC,KAAIiQ,oDACJjQ,KAAIkQ,kIAeEhB,EAAAlP,KAAI8M,MAAK,GAAaL,EAAAzM,KAAIiP,YAAW,uCAA3B,0BAAnBhN,EAA6BH,EAAAiM,EAAA7L,2CAApB,EAAAxB,GAAAwO,KAAAA,EAAAlP,KAAI8M,MAAK,KAAA7I,EAAAyL,EAAAR,GAAa,EAAAxO,GAAA+L,KAAAA,EAAAzM,KAAIiP,YAAW,KAAAhL,EAAAkK,EAAA1B,oEAFayC,EAAAlP,KAAI8M,MAAK,GAAiBL,EAAAzM,KAAIiP,YAAW,gDAA/B,kBAA5DrL,EAAAxE,EAAA,OAAA6R,EAAAjR,KAAIsQ,wFAAbrO,EAAmFH,EAAA1C,EAAA8C,GAAjCL,EAA6BzC,EAAA2O,2CAApB,EAAArN,GAAAwO,KAAAA,EAAAlP,KAAI8M,MAAK,KAAA7I,EAAAyL,EAAAR,GAA3D,EAAAxO,GAAAuQ,KAAAA,EAAAjR,KAAIsQ,qBAAwE,EAAA5P,GAAA+L,KAAAA,EAAAzM,KAAIiP,YAAW,KAAAhL,EAAAkK,EAAA1B,0EADjG,OAAAzM,KAAIsQ,KAAItB,iEADf/M,EAMKH,EAAA+J,EAAA3J,4IAUEqP,EAAAvR,KAAIwR,gCAATvQ,OAAIC,GAAA,2TAHVe,EAoBMH,EAAA4J,EAAAxJ,GAnBJL,EAA2D6J,EAAAC,UAC3D9J,EAiBK6J,EAAAE,8EAhBI2F,EAAAvR,KAAIwR,mBAATvQ,OAAIC,GAAA,EAAA,mHAAJD,4DAKaiO,EAAAlP,KAAO4C,KAAI,GAAa6J,EAAAzM,KAAOiP,YAAW,uCAA9B,0BAArBhN,EAA+BH,EAAAiM,EAAA7L,2CAAtB,EAAAxB,GAAAwO,KAAAA,EAAAlP,KAAO4C,KAAI,KAAAqB,EAAAyL,EAAAR,GAAa,EAAAxO,GAAA+L,KAAAA,EAAAzM,KAAOiP,YAAW,KAAAhL,EAAAkK,EAAA1B,oEAFWyC,EAAAlP,KAAO4C,KAAI,GAAiB6J,EAAAzM,KAAOiP,YAAW,gDAAlC,kBAAjErL,EAAAxE,EAAA,OAAA6R,EAAAjR,KAAOsQ,wFAAhBrO,EAAwFH,EAAA1C,EAAA8C,GAAnCL,EAA+BzC,EAAA2O,2CAAtB,EAAArN,GAAAwO,KAAAA,EAAAlP,KAAO4C,KAAI,KAAAqB,EAAAyL,EAAAR,GAAhE,EAAAxO,GAAAuQ,KAAAA,EAAAjR,KAAOsQ,qBAA0E,EAAA5P,GAAA+L,KAAAA,EAAAzM,KAAOiP,YAAW,KAAAhL,EAAAkK,EAAA1B,uKAQ1GxK,EAAuDH,EAAAwJ,EAAApJ,oEAHIuK,EAAAzM,KAAOyR,SAAQ,GACvB5E,EAAA7M,KAAOqQ,KAAI,mBAP7D,OAAArQ,KAAOsQ,KAAInB,wBAQTQ,EAAA3P,KAAO0R,qBAAmBtC,yTATxBxL,EAAAiI,EAAA,QAAA8F,EAAAhQ,EAAA3B,KAAO0R,oBAAsB,qBAAuB,IAAE,0BAAjEzP,EAaKH,EAAA+J,EAAA3J,sBAPHL,EAMMgK,EAAAH,GALJ7J,EAAoF6J,EAAAU,GAAnDvK,EAA0BuK,EAAAwF,wBAC3D/P,EAAwE6J,EAAAW,GAA3CxK,EAAsBwK,EAAAwF,mHADU,EAAAnR,GAAA+L,KAAAA,EAAAzM,KAAOyR,SAAQ,KAAAxN,EAAAkK,EAAA1B,GACvB,EAAA/L,GAAAmM,KAAAA,EAAA7M,KAAOqQ,KAAI,KAAApM,EAAAoK,EAAAxB,GAC3D7M,KAAO0R,qEATL,EAAAhR,GAAAiR,KAAAA,EAAAhQ,EAAA3B,KAAO0R,oBAAsB,qBAAuB,IAAE,wFAqBjD3F,EAAA/L,KAAI8R,IAAG,+DAA7B7P,EAAoCH,EAAA4J,EAAAxJ,kBAAd,EAAAxB,GAAAqL,KAAAA,EAAA/L,KAAI8R,IAAG,KAAA7N,EAAA6H,EAAAC,mFAMD,iBAAd/L,EAAG,GAACoR,MAAkB9D,IAExB,MAAAyE,IAAAA,KAAA7H,MAAM8H,QAAQhS,EAAI,GAAAoR,QAAUpR,EAAI,GAAAoR,MAAMnQ,OAAS,gMAJ3DgB,EAWMH,EAAA4J,EAAAxJ,GAVJL,EAAc6J,EAAAC,uJAKHH,EAAAxL,KAAIoR,2BAATnQ,OAAIC,GAAA,+HADRe,EAIKH,EAAA8J,EAAA1J,8EAHIsJ,EAAAxL,KAAIoR,cAATnQ,OAAIC,GAAA,EAAA,mHAAJD,sDAHA8K,EAAA/L,KAAIoR,MAAK,sCAAbnP,EAAkBH,EAAAL,EAAAS,kBAAd,EAAAxB,GAAAqL,KAAAA,EAAA/L,KAAIoR,MAAK,KAAAnN,EAAA6H,EAAAC,4CAIJ/L,EAAI,GAAA,oEAATiC,EAAeH,EAAA+J,EAAA3J,8BAAVlC,EAAI,GAAA,KAAAiE,EAAA6H,EAAAC,iQAnJMmD,GAAAlP,KAAI4M,MAAK,GAAO4D,GAAAxQ,KAAIwM,UAAS,GAAID,GAAAvM,KAAI8M,MAAK,GAC1CiE,GAAA/Q,KAAI0M,KAAI,MAM7B1M,EAAG,GAACiS,MAAMpP,KAAI,MAAM7C,EAAG,GAACiS,MAAMC,OAAM,GAKlCjF,GAAAjN,KAAImN,QAAO,GAGqBgF,GAAAnS,KAAImL,QAAQC,MAAMqF,SAASC,GAAE,GAAO0B,GAAApS,KAAImL,QAAQC,MAAMqF,SAASE,MAAK,GAAW0B,GAAArS,EAAI,GAAAmL,QAAQC,MAAMC,KAAI,GAUlIiH,GAAAtS,KAAIuS,OAAM,MAoCNvS,EAAG,GAACgM,cAAcpJ,KAAI,MAE9B5C,EAAG,GAACgM,cAAcwG,QAAO,MAEnBxS,EAAG,GAACgM,cAAcqE,KAAI,MAE5BrQ,EAAG,GAACgM,cAAcyG,SAAQ,MAlDlBzS,EAAG,GAACmL,QAAQuH,gCAAjBzR,OAAIC,GAAA,uBAcD,IAAAyR,GAAA3S,KAAI4S,gCAAT3R,OAAIC,GAAA,mEAUC,IAAA2R,GAAA7S,KAAIyL,kCAATxK,OAAIC,GAAA,8BA2BDlB,EAAG,GAACgM,cAAcoF,OAAK0B,GAAA9S,GAWrB+S,GAAA/S,KAAIgT,oCAAT/R,OAAIC,GAAA,uBAkBC,IAAA+R,GAAAjT,KAAIkT,8CAATjS,OAAIC,GAAA,8BAaLlB,EAAG,GAACwR,YAAcxR,KAAIwR,WAAWvQ,OAAS,GAACoO,GAAArP,GAyB3CuN,GAAAvN,KAAI8R,KAAGvC,GAAAvP,GAIPsP,GAAAtP,KAAIoR,OAAK5D,GAAAxN,yEA3IqB,qBAAoB,6EAMhC,iBACJ,iKAQgB,kBAAiC,qBAAuC,2fAiDnG,4dA5DEA,EAAG,GAACyN,MAAMpN,MAAGuD,EAAAuP,EAAA,MAAAC,eAAOpT,EAAG,GAACyN,MAAM4F,klBAP/BzP,EAAA0P,EAAA,KAAAC,GAAAvT,KAAIwT,uCAAjBvR,EA6JUH,EAAAwR,EAAApR,GA5JRL,EA2JMyR,EAAAG,GA1JJ5R,EAGM4R,EAAAtH,GAFJtK,EAAuEsK,EAAAuH,6CACvE7R,EAAsCsK,EAAAD,iBAGxCrK,EAA+D4R,EAAAN,UAE/DtR,EAEM4R,EAAAxH,sCAENpK,EAYM4R,EAAA7F,GAXJ/L,EAA4C+L,EAAAC,UAC5ChM,EAAoB+L,EAAAnM,iBAEpBI,EAOM+L,EAAAE,GANJjM,EAA+BiM,EAAA8D,oDAC/B/P,EAIKiM,EAAA6F,+DAIT9R,EAEM4R,EAAA/F,4BAEN7L,EAOM4R,EAAAG,IANJ/R,EAA+C+R,GAAAjG,aAC/C9L,EAIM+R,GAAAC,iEAIRhS,EAiBM4R,EAAAK,IAhBJjS,EAAkCiS,GAAAC,aAClClS,EAcKiS,GAAAE,iEAIPnS,EAeM4R,EAAAQ,IAdJpS,EAAuBoS,GAAAC,aACvBrS,EAYMoS,GAAAE,IAXJtS,EAAyCsS,GAAAtC,sBACzChQ,EAAIsS,GAAAC,+BAEJvS,EAAIsS,GAAAE,+BAEJxS,EAAIsS,GAAAG,yDAURzS,EAeM4R,EAAAc,IAdJ1S,EAA+B0S,GAAAC,aAC/B3S,EAYK0S,GAAAE,iEAIP5S,EAaM4R,EAAAiB,IAZJ7S,EAAiC6S,GAAAC,aACjC9S,EAUK6S,GAAAE,yJA1GkBC,IAAA,EAAAnU,IAAAwO,MAAAA,GAAAlP,KAAI4M,MAAK,KAAA3I,EAAAyL,EAAAR,MAAO2F,IAAA,EAAAnU,IAAA8P,MAAAA,GAAAxQ,KAAIwM,UAAS,KAAAvI,EAAA4M,EAAAL,MAAIqE,IAAA,EAAAnU,IAAA6L,MAAAA,GAAAvM,KAAI8M,MAAK,KAAA7I,EAAAqI,EAAAC,MAC1CsI,IAAA,EAAAnU,IAAAqQ,MAAAA,GAAA/Q,KAAI0M,KAAI,KAAAzI,EAAA6M,EAAAC,0BAGvB/Q,EAAG,GAACyN,MAAMpN,sCAAUL,EAAG,GAACyN,MAAM4F,yCAGpCrT,EAAG,GAACiS,MAAMpP,KAAI,KAAAoB,EAAA6Q,EAAAC,yBAAM/U,EAAG,GAACiS,MAAMC,OAAM,KAAAjO,EAAA+Q,EAAAC,MAKlCJ,IAAA,EAAAnU,IAAAuM,MAAAA,GAAAjN,KAAImN,QAAO,KAAAlJ,EAAAyK,EAAAzB,MAGqB4H,IAAA,EAAAnU,IAAAyR,MAAAA,GAAAnS,KAAImL,QAAQC,MAAMqF,SAASC,GAAE,KAAAzM,EAAAiR,EAAA/C,MAAO0C,IAAA,EAAAnU,IAAA0R,MAAAA,GAAApS,KAAImL,QAAQC,MAAMqF,SAASE,MAAK,KAAA1M,EAAAkR,EAAA/C,MAAWyC,IAAA,EAAAnU,IAAA2R,MAAAA,GAAArS,EAAI,GAAAmL,QAAQC,MAAMC,KAAI,KAAApH,EAAAmR,EAAA/C,sBAE9HrS,EAAG,GAACmL,QAAQuH,kBAAjBzR,OAAIC,GAAA,EAAA,6HAAJD,YAQC4T,IAAA,EAAAnU,IAAA4R,MAAAA,GAAAtS,KAAIuS,OAAM,MAAA7E,GAAA2H,UAAA/C,mBAMRK,GAAA3S,KAAI4S,kBAAT3R,OAAIC,GAAA,EAAA,qHAAJD,OAAIC,EAAAoU,GAAArU,OAAAC,GAAA,8BAUC2R,GAAA7S,KAAIyL,oBAATxK,OAAIC,GAAA,EAAA,8HAAJD,+BAoBOjB,EAAG,GAACgM,cAAcpJ,KAAI,KAAAqB,EAAAsR,GAAAC,yBAE9BxV,EAAG,GAACgM,cAAcwG,QAAO,KAAAvO,EAAAwR,GAAAC,yBAEnB1V,EAAG,GAACgM,cAAcqE,KAAI,KAAApM,EAAA0R,GAAAC,yBAE5B5V,EAAG,GAACgM,cAAcyG,SAAQ,KAAAxO,EAAA4R,GAAAC,IACtB9V,EAAG,GAACgM,cAAcoF,wFAWhB2B,GAAA/S,KAAIgT,sBAAT/R,OAAIC,GAAA,EAAA,8HAAJD,yBAkBKgS,GAAAjT,KAAIkT,gCAATjS,OAAIC,GAAA,EAAA,8HAAJD,OAaDjB,EAAG,GAACwR,YAAcxR,KAAIwR,WAAWvQ,OAAS,kEAyB1CjB,KAAI8R,oEAIJ9R,KAAIoR,0EA9IAyD,IAAA,EAAAnU,GAAA6S,MAAAA,GAAAvT,KAAIwT,kDAkCPvS,OAAIC,GAAA,yNArCDyN,GAAG7D,4JCgFaoE,EAAAlP,EAAc,GAAA,EAAI,IAAM,IACzBwQ,EAAAxQ,EAAc,GAAA,EAAI,eAAiB,4MAJ9B4D,EAAAuI,EAAA,QAAA4J,EAAA,oBAAA/V,EAAc,GAAA,EAAI,OAAS,QAAM,gCACxCe,KAAKiV,IAAIjV,KAAKkV,IAAIjW,EAAW,IAAIA,EAAS,GAAE,aADlEiC,EAMMH,EAAAqK,EAAAjK,GAJJL,EAGMsK,EAAAD,GAFJrK,EAAwDqK,EAAAE,iBACxDvK,EAAyEqK,EAAAG,kBADpD,EAAA3L,GAAAwO,KAAAA,EAAAlP,EAAc,GAAA,EAAI,IAAM,MAAGiE,EAAAyL,EAAAR,GAC5B,EAAAxO,GAAA8P,KAAAA,EAAAxQ,EAAc,GAAA,EAAI,eAAiB,aAAUiE,EAAA4M,EAAAL,GAJxC,EAAA9P,GAAAqV,KAAAA,EAAA,oBAAA/V,EAAc,GAAA,EAAI,OAAS,QAAM,qDACxCe,KAAKiV,IAAIjV,KAAKkV,IAAIjW,EAAW,IAAIA,EAAS,GAAE,8CAF/D+R,EAAA/R,MAAae,KAAKkV,IAAIjW,MAAe,6JAH5CiC,EAYMH,EAAA4J,EAAAxJ,mIATC,EAAAxB,IAAAqR,EAAA/R,MAAae,KAAKkV,IAAIjW,MAAe,+KA/DtC2C,8BAXOuT,aAAAA,EAAe,GAACpL,GAChBqL,WAAAA,EAAa,GAACrL,GACdsL,WAAAA,EAAcC,UACdC,UAAAA,EAAY,KAAGxL,GACfyL,SAAAA,GAAW,GAAKzL,EAGvB0L,EAAc,EACdC,EAAY,EACZC,GAAY,EACZC,EAAc,EAIT,SAAAC,EAAiBpR,GACpB+Q,IAEJC,EAAchR,EAAEqR,QAAQ,GAAGC,QAC3BC,EAAA,EAAAL,GAAY,GACZK,EAAA,EAAAJ,EAAc,IAIP,SAAAK,EAAgBxR,GAClBkR,IAAaH,IAElBE,EAAYjR,EAAEqR,QAAQ,GAAGC,YACzBH,EAAcF,EAAYD,GAGtBzV,KAAKkV,IAAIU,GAAe,IAC1BnR,EAAEyR,2BAKGC,IACF,IAAAR,GAAaH,EAAQ,aAEpBY,EAAgBV,EAAYD,EAE9BW,EAAgBb,GAAaJ,EAAe,EAE9CE,EAAWF,EAAe,GACjBiB,GAAiBb,GAAaJ,EAAeC,EAAa,GAEnEC,EAAWF,EAAe,GAG5Ba,EAAA,EAAAL,GAAY,GACZK,EAAA,EAAAJ,EAAc,UAIhB/R,GAAO,KACDjC,IACFA,EAAQW,iBAAiB,aAAcsT,EAAgB,CAAIQ,SAAS,IACpEzU,EAAQW,iBAAiB,YAAa0T,EAAe,CAAII,SAAS,IAClEzU,EAAQW,iBAAiB,WAAY4T,EAAc,CAAIE,SAAS,QAIpEpS,GAAS,KACHrC,IACFA,EAAQY,oBAAoB,aAAcqT,GAC1CjU,EAAQY,oBAAoB,YAAayT,GACzCrU,EAAQY,oBAAoB,WAAY2T,6SAKNvU,EAAO0U,gzBCnC3CpV,EAYMH,EAAA8L,EAAA1L,GAXJL,EAUM+L,EAAAE,GATJjM,EAQMiM,EAAAD,GAPJhM,EAA0BgM,EAAAF,UAC1B9L,EAGMgM,EAAA5B,UACNpK,EAAgEgM,EAAApM,UAChEI,EAAmEgM,EAAAG,sBAAzBhO,EAAO,qCATfA,EAAO,gEAD5CA,EAAO,IAAAwN,GAAAxN,oEAAPA,EAAO,0HApCC,IAAAsX,SAAAA,GAAW,GAAIxM,GACfyM,MAAAA,EAAQ,KAAIzM,EAEnB0M,GAAU,SAuBd5S,GAAO,OAHE,iBAAkB6S,QAAUC,UAAUC,eAAiB,IAKrCL,GArB4B,SAA9CM,aAAaC,QAAQ,sBAsB1BC,iBACEf,EAAA,EAAAS,GAAU,EAAI,GACbD,+FAhBLR,EAAA,EAAAS,GAAU,GACNF,GALJM,aAAaG,QAAQ,oBAAqB,6aCVjCC,EAAU,IAAAlN,GACVmN,OAAAA,EAAS,KAAGnN,EAEjB,MAAAoN,EAAWhT,IACb,IAAAiT,EAAiB,KACjBC,GAAkB,EAClBC,GAAU,WAELC,IACFD,IACHZ,OAAOc,uBAAqB,KAC1BC,IACAH,GAAU,CAAK,IAEjBA,GAAU,YAILG,IAED,MAAAC,EAAW9Y,SAAS+Y,cAAc,wBACpCD,EAAQ,OACJE,EAAOF,EAASG,wBAEtBR,EAAkBO,EAAKE,KAAO,KAAOF,EAAKE,IAAMpB,OAAOqB,YAAc,KAInEV,cACqB,OAAnBD,IACFA,EAAiB,KACjBD,EAAS,SAAY,CAAA5E,QAAS,KAAMyF,YAAY,MAMhD,IAAAC,GAAQ,EAGD,IAAA,MAAAxF,KAAMwE,EAAU,CACnB,MAAA1E,EAAU3T,SAASsZ,eAAezF,OACnCF,EAAO,eAENqF,EAAOrF,EAAQsF,2BAGjBD,EAAKE,KAAOZ,GAAUU,EAAKO,OAASjB,EAAM,CAC5Ce,GAAQ,EACJb,IAAmB3E,IACrB2E,EAAiB3E,EACjB0E,EAAS,SAAY,CAAA5E,QAASE,EAAIuF,YAAY,YAQ/C,IAAAC,IAAUZ,GAAsC,OAAnBD,EAAuB,OACjDgB,EAAiB1B,OAAOqB,YAC1B,IAAAM,EAAoB,KACpBC,EAAiB,EAEV,IAAA,MAAA7F,KAAMwE,EAAU,CACnB,MAAA1E,EAAU3T,SAASsZ,eAAezF,OACnCF,EAAO,eAENqF,EAAOrF,EAAQsF,2BACjBD,EAAKO,OAAS,GAAKP,EAAKE,IAAMM,EAAc,eAG1CG,EAAavY,KAAKC,IAAI,EAAG2X,EAAKE,KAE9BU,EADgBxY,KAAKiV,IAAImD,EAAgBR,EAAKO,QAChBI,EAEhCC,EAAcF,IAChBA,EAAiBE,EACjBH,EAAoB5F,GAIpB4F,IACFjB,EAAiBiB,EACjBlB,EAAS,SAAQ,CAAI5E,QAAS8F,EAAmBL,YAAY,aAKnEnU,GAAO,KAEL6S,OAAOnU,iBAAiB,SAAUgV,EAAY,CAAIlB,SAAS,IAG3DU,WAAWU,EAAsB,KAGjCf,OAAOnU,iBAAiB,OAAQkV,GAGhCf,OAAO+B,eAAc,KACnBhB,IACAiB,QAAQC,IAAI,mBAAoBvB,GAChCsB,QAAQC,IAAI,oBAAqBtB,GAGtB,IAAA,MAAA5E,KAAMwE,EAAU,CACnB,MAAA1E,EAAU3T,SAASsZ,eAAezF,MACpCF,EAAO,OACHqF,EAAOrF,EAAQsF,wBACrBa,QAAQC,IAAG,GAAIlG,UAAWmF,EAAKE,IAAIc,QAAQ,cAAchB,EAAKO,OAAOS,QAAQ,YAMrF3U,GAAS,KACPyS,OAAOlU,oBAAoB,SAAU+U,GACrCb,OAAOlU,oBAAoB,OAAQiV,GAC/Bf,OAAO+B,uBAAuB/B,OAAO+B,cAAc,0yBCqBlDxZ,EAAQ,GAACA,EAAe,IAAEwM,UAAS,GA6BjCK,GAAA7M,KAAS8M,MAAK,GACI8M,GAAA5Z,KAAS6Z,UAAS,GAYLC,GAAA9Z,KAAS+Z,SAAQ,GAAIC,GAAAha,KAAS6Z,UAAS,GACtCxH,GAAArS,KAASia,UAAS,GACpBC,GAAAla,KAASma,QAAO,GAClBC,GAAApa,KAAS+M,MAAK,MACL/M,EAAQ,GAACqa,cAAc3J,GAAE,MAAO1Q,EAAQ,GAACqa,cAAc1J,MAAK,GAoFlG2J,GAAAta,KAAS8M,MAAK,GAAKyN,GAAAva,KAAS6Z,UAAS,+BA1ItB7Z,EAAa,UAAU,sBAAgBA,EAAmB,KAGxDwa,EAAA,IAAAC,GAAA,CAAArR,MAAA,CAAAkO,UAAA,QAAa,cASjCtX,EAAgB,IAAAgP,GAAAhP,MAgDRA,EAAQ,0BAAbiB,OAAIC,GAAA,kGAuBIlB,EAAe,GACjBmW,WAAAnW,KAASiB,kBACTjB,EAAa,6CAad,IAAAwL,GAAAxL,KAAS0a,iCAAdzZ,OAAIC,GAAA,gIA3F4B,8UA2CkB,kBAAsB,4TAIR,uBAAmC,wZAoFpF,idA9DH1B,EAAAmb,GAAAta,IAAAua,GAAA5a,KAASuS,SAAM3O,EAAA+W,GAAA,MAAAC,8ZAtEnC3Y,EAGSH,EAAAkM,EAAA9L,GAFPL,EAAsCmM,EAAA1C,iDA4BxCrJ,EAKSH,EAAA+Y,EAAA3Y,GAJPL,EAGMgZ,EAAA1O,GAFJtK,EAAyBsK,EAAA2O,iBACzBjZ,EAAgDsK,EAAAD,mBAKpDjK,EA0BUH,EAAAiZ,EAAA7Y,GAzBRL,EAwBMkZ,EAAAnN,GAvBJ/L,EAA4C+L,EAAAoN,UAE5CnZ,EASM+L,EAAAC,GARJhM,EAAkDgM,EAAA5B,UAClDpK,EAMKgM,EAAAjC,GALH/J,EAA8E+J,EAAAqP,GAA1EpZ,EAA0BoZ,EAAArJ,6CAC9B/P,EAAyD+J,EAAAsP,IAArDrZ,EAA2BqZ,GAAArJ,8BAC/BhQ,EAAqD+J,EAAAuP,IAAjDtZ,EAAyBsZ,GAAAC,8BAC7BvZ,EAAiD+J,EAAAyP,IAA7CxZ,EAAuBwZ,GAAAC,8BAC3BzZ,EAA+G+J,EAAA2P,IAA3G1Z,EAAgC0Z,GAAAC,yDAKxC3Z,EAQM+L,EAAAE,mEAKV7L,EAOUH,EAAA2Z,GAAAvZ,GANRL,EAKM4Z,GAAA5H,IAJJhS,EAAgDgS,GAAA6H,aAChD7Z,EAEMgS,GAAAnG,IADJ7L,EAA4I6L,GAAAiN,kCAiBlJ1Y,EAyCUH,EAAA6Z,GAAAzZ,GAxCRL,EAuCM8Z,GAAA7H,IAtCJjS,EAAkDiS,GAAA8H,aAElD/Z,EAmCMiS,GAAAF,mEAIV3R,EAKSH,EAAA+Z,GAAA3Z,GAJPL,EAGMga,GAAA1H,IAFJtS,EAA8CsS,GAAA2H,wCAC9Cja,EAAiDsS,GAAA4H,8BArIT/b,EAAe,0DANpCA,EAAa,uCAQ7BA,EAAQ,GAACA,EAAe,IAAEwM,UAAS,KAAAvI,EAAAqI,EAAAC,IAIrCvM,EAAgB,+EAyBZ6U,IAAA,EAAAnU,EAAA,KAAAmM,MAAAA,GAAA7M,KAAS8M,MAAK,KAAA7I,EAAAoK,EAAAxB,MACIgI,IAAA,EAAAnU,EAAA,KAAAkZ,MAAAA,GAAA5Z,KAAS6Z,UAAS,KAAA5V,EAAA+X,EAAApC,MAYL/E,IAAA,EAAAnU,EAAA,KAAAoZ,MAAAA,GAAA9Z,KAAS+Z,SAAQ,KAAA9V,EAAAgY,EAAAnC,MAAIjF,IAAA,EAAAnU,EAAA,KAAAsZ,MAAAA,GAAAha,KAAS6Z,UAAS,KAAA5V,EAAAiY,EAAAlC,MACtCnF,IAAA,EAAAnU,EAAA,KAAA2R,MAAAA,GAAArS,KAASia,UAAS,KAAAhW,EAAAmR,GAAA/C,MACpBwC,IAAA,EAAAnU,EAAA,KAAAwZ,MAAAA,GAAAla,KAASma,QAAO,KAAAlW,EAAAkY,GAAAjC,MAClBrF,IAAA,EAAAnU,EAAA,KAAA0Z,MAAAA,GAAApa,KAAS+M,MAAK,KAAA9I,EAAAmY,GAAAhC,4BACLpa,EAAQ,GAACqa,cAAc3J,GAAE,KAAAzM,EAAAsR,GAAAC,4BAAOxV,EAAQ,GAACqa,cAAc1J,MAAK,KAAA1M,EAAAoY,GAAAC,2BAM7Ftc,EAAQ,YAAbiB,OAAIC,GAAA,EAAA,qHAAJD,OAAIC,EAAAqb,GAAAtb,OAAAC,GAAA,cAgBQ2T,IAAA,EAAAnU,EAAA,KAAAlB,EAAAmb,GAAAta,IAAAua,GAAA5a,KAASuS,+DAObvS,EAAe,IACjB,EAAAU,EAAA,KAAA8b,EAAArG,WAAAnW,KAASiB,gFAcVuK,GAAAxL,KAAS0a,mBAAdzZ,OAAIC,GAAA,EAAA,8HAAJD,SAwCA4T,IAAA,EAAAnU,EAAA,KAAA4Z,MAAAA,GAAAta,KAAS8M,MAAK,KAAA7I,EAAAwY,GAAAnC,MAAKzF,IAAA,EAAAnU,EAAA,KAAA6Z,MAAAA,GAAAva,KAAS6Z,UAAS,KAAA5V,EAAAyY,GAAAnC,yEA9ErCtZ,OAAIC,GAAA,meAjENlB,EAAS,6JAFfiC,EAIMH,EAAA4J,EAAAxJ,GAHJL,EAA2B6J,EAAAgI,UAC3B7R,EAAkB6J,EAAAoQ,iBAClBja,EAA2E6J,EAAAqQ,wBADvE/b,EAAS,yJAJfiC,EAA+CH,EAAA4J,EAAAxJ,wEA6BhClC,EAAQ,wBAAbiB,OAAIC,GAAA,mdAPZe,EAkBMH,EAAA+L,EAAA3L,GAjBJL,EAgBMgM,EAAA5B,GAfJpK,EAGMoK,EAAAC,GAFJrK,EAAmBqK,EAAAyB,UACnB9L,EAAoEqK,EAAA8B,UAEtEnM,EAUMoK,EAAAE,uEAZuCnM,EAAa,uCAJpBA,EAAa,6CAO1CA,EAAQ,WAAbiB,OAAIC,GAAA,EAAA,mHAAJD,sFAK2BiO,EAAAlP,MAAI4M,MAAK,GACLH,EAAAzM,MAAIwM,UAAS,GAAIG,EAAA3M,MAAI8M,MAAK,sGAA/B,mBAAmB,kIAJpB9M,EAAU,KAAKA,EAAG,IAACwT,GAAK,SAAW,IAAE,0BAD9DvR,EAMSH,EAAAkM,EAAA9L,GAFPL,EAA0CmM,EAAA5B,iBAC1CvK,EAA+DmM,EAAA3B,6EADtC,EAAA3L,EAAA,IAAAwO,KAAAA,EAAAlP,MAAI4M,MAAK,KAAA3I,EAAAyL,EAAAR,GACL,EAAAxO,EAAA,IAAA+L,KAAAA,EAAAzM,MAAIwM,UAAS,KAAAvI,EAAAkK,EAAA1B,GAAI,EAAA/L,EAAA,IAAAiM,KAAAA,EAAA3M,MAAI8M,MAAK,KAAA7I,EAAAmK,EAAAzB,qCAJhC3M,EAAU,KAAKA,EAAG,IAACwT,GAAK,SAAW,IAAE,8JAyCpDxT,EAAU,KAAKA,EAAG,IAACwT,6HAAnBxT,EAAU,KAAKA,EAAG,IAACwT,wXAwB9BxT,EAAQ,wBAAbiB,OAAIC,GAAA,uNAAClB,EAAQ,WAAbiB,OAAIC,GAAA,EAAA,mHAAJD,OAAIC,EAAAyb,EAAA1b,OAAAC,GAAA,yCAAJD,OAAIC,GAAA,uIAoBmBgO,EAAAlP,MAAK4C,KAAI,GAAa6J,EAAAzM,MAAKiP,YAAW,uCAA5B,0BAAnBhN,EAA6BH,EAAAiM,EAAA7L,2CAApB,EAAAxB,EAAA,IAAAwO,KAAAA,EAAAlP,MAAK4C,KAAI,KAAAqB,EAAAyL,EAAAR,GAAa,EAAAxO,EAAA,IAAA+L,KAAAA,EAAAzM,MAAKiP,YAAW,KAAAhL,EAAAkK,EAAA1B,4DAFXV,EAAA/L,MAAK4C,KAAI,8BAApCgB,EAAAxE,EAAA,OAAA6R,EAAAjR,MAAKN,oCAAduC,EAAkDH,EAAA1C,EAAA8C,kBAAd,EAAAxB,EAAA,IAAAqL,KAAAA,EAAA/L,MAAK4C,KAAI,KAAAqB,EAAA6H,EAAAC,GAApC,EAAArL,EAAA,IAAAuQ,KAAAA,EAAAjR,MAAKN,2DAMMqM,EAAA/L,MAAK4c,KAAI,6DAA7B3a,EAAqCH,EAAAwJ,EAAApJ,kBAAjB,EAAAxB,EAAA,IAAAqL,KAAAA,EAAA/L,MAAK4c,KAAI,KAAA3Y,EAAA6H,EAAAC,wCAKpBkH,EAAAjT,MAAK6c,8BAAV5b,OAAIC,GAAA,uFADRe,EAUKH,EAAA8J,EAAA1J,iFATI+Q,EAAAjT,MAAK6c,iBAAV5b,OAAIC,GAAA,EAAA,mHAAJD,8CAKK,QAAA8K,EAAA/L,MAAQ4C,KAAI,GAAMka,EAAA9c,MAAQiP,aAAWI,GAAArP,kFAArC,EAAAU,EAAA,IAAAqL,KAAAA,EAAA/L,MAAQ4C,KAAI,KAAAqB,EAAA6H,EAAAC,GAAM/L,MAAQiP,yIAFYlD,EAAA/L,MAAQ4C,KAAI,8BAA1CgB,EAAAxE,EAAA,OAAA6R,EAAAjR,MAAQN,oCAAjBuC,EAAwDH,EAAA1C,EAAA8C,kBAAjB,EAAAxB,EAAA,IAAAqL,KAAAA,EAAA/L,MAAQ4C,KAAI,KAAAqB,EAAA6H,EAAAC,GAA1C,EAAArL,EAAA,IAAAuQ,KAAAA,EAAAjR,MAAQN,2DAEyBwL,EAAAlL,MAAQiP,YAAW,kBAAtB,+CAAG,EAAAvO,EAAA,IAAAwK,KAAAA,EAAAlL,MAAQiP,YAAW,KAAAhL,EAAAsH,EAAAL,kEAH1D,OAAAlL,MAAQN,IAAG6P,iEADlBtN,EAMKH,EAAA+J,EAAA3J,4JAnBN,OAAAlC,MAAKN,IAAGyP,wBAMRQ,EAAA3P,MAAK4c,MAAIxN,GAAApP,KAITA,EAAI,IAAC6c,UAAY7c,MAAK6c,SAAS5b,OAAS,GAACoM,GAAArN,0EAXhDiC,EAwBKH,EAAA+J,EAAA3J,uIAjBElC,MAAK4c,4DAIL5c,EAAI,IAAC6c,UAAY7c,MAAK6c,SAAS5b,OAAS,gIAd9CiO,EAAAlP,MAAS8M,MAAK,GAEVyE,EAAAvR,MAAS+c,2BAAd9b,OAAIC,GAAA,4JAHVe,EA+BMH,EAAA4J,EAAAxJ,GA9BJL,EAAyB6J,EAAAiC,iBACzB9L,EA4BK6J,EAAAE,sEA7BA,EAAAlL,EAAA,IAAAwO,KAAAA,EAAAlP,MAAS8M,MAAK,KAAA7I,EAAAyL,EAAAR,qBAEVqC,EAAAvR,MAAS+c,cAAd9b,OAAIC,GAAA,EAAA,mHAAJD,yGAhHXjB,EAAS,GAAA,EAEJA,EAAS,GAAA,kFAHrBiC,EA0JMH,EAAA4J,EAAAxJ,yPA/QA8a,EAAQ,CAAA,EACRC,EAAQ,GACRC,EAAa,KACbC,EAAkB,EAClBC,GAAY,EACZC,EAAY,KACZC,GAAmB,EACnBC,EAAa,GA6DR,SAAAC,EAAYC,GACb,MAAA9a,EAAUhD,SAASsZ,eAAewE,GACpC9a,GACFA,EAAQ+a,eAAiB,CAAAC,SAAU,iBAI/BC,EAAWX,EAASY,WAAUlP,GAAOA,EAAI6E,KAAOiK,KACpC,IAAdG,GACF7G,EAAA,EAAAoG,EAAkBS,GAGpB7G,EAAA,EAAAmG,EAAaO,GACbK,aA+BOA,IACP/G,EAAA,EAAAuG,GAAmB,GAxGrB1Y,GAAOmZ,UACLtE,QAAQC,IAAI,6BAGVD,QAAQC,IAAI,wCACNsE,QAAqBC,MAAM,2BAC5B,IAAAD,EAAaE,aACNvZ,MAAK,sCAAuCqZ,EAAaG,cAErEnB,QAAiBgB,EAAaI,QAC9B3E,QAAQC,IAAI,gDAGN2E,EAAW,WACRnd,EAAI,EAAGA,GAAK8b,EAASsB,UAAWpd,IACvCuY,QAAQC,IAAG,gBAAiBxY,aAC5Bmd,EAAYtZ,KACVkZ,iBAAiB/c,UACd4H,MAAIiV,UACE,IAAAQ,EAAIL,UACPzE,QAAQ+E,KAAI,OAAQtd,qBAAqBqd,EAAIJ,sCACtC,eAGDM,QAAgBF,EAAIH,cAC1B3E,QAAQC,IAAG,OAAQxY,8BACZud,QACAC,UACPjF,QAAQkF,MAA2B,qBAAAzd,UAAWwd,GACvC,SAGVE,OAAMC,IACLpF,QAAQkF,MAA2B,qBAAAzd,UAAW2d,GACvC,SAMT,MAAAC,QAAoB3Y,QAAQ4Y,IAAIV,UACtCpB,EAAW6B,EAAYvW,QAAOoG,GAAe,OAARA,KACrC8K,QAAQC,IAA2B,uBAAAuD,EAAShc,uBAEpB,IAApBgc,EAAShc,OACD,MAAA,IAAA0D,MAAM,mCAIlB4Y,EAAgBN,EAAS3U,KAAIqG,GAAOA,EAAI6E,MAExCuD,EAAA,EAAAqG,GAAY,SACLuB,GACPlF,QAAQkF,MAAM,sBAAuBA,GACrC5H,EAAA,EAAAsG,EAAYsB,EAAMK,SAAW,4BAC7BjI,EAAA,EAAAqG,GAAY,gCAqBP,SAAc/G,GACjB,GAAAA,GAAY,GAAKA,EAAW4G,EAAShc,OAAM,CAE7Cuc,EADcP,EAAS5G,GAAU7C,MAM5B,SAAoBrQ,GACnB,MAAAmQ,QAAAA,EAAOyF,WAAEA,GAAe5V,EAAMiC,OAEjC,IAAA2T,GAAczF,EAAO,CAExByD,EAAA,EAAAmG,EAAa5J,SACPsK,EAAWX,EAASY,WAAUlP,GAAOA,EAAI6E,KAAOF,KACpC,IAAdsK,GACF7G,EAAA,EAAAoG,EAAkBS,gBAOtB7G,EAAA,EAAAuG,GAAoBA,uCA2CQE,EAAY7O,EAAI6E,OAyCnBgK,EAAY7O,EAAI6E,YCvMjC,iFAAQ,CAClB1R,OAAQnC,SAASsf"}